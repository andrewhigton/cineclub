{"ast":null,"code":"import { ActionType } from '../actions/types';\n;\nconst initialState = {\n  film: null,\n  films: [],\n  loading: true,\n  error: {}\n};\n\nconst film = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action.type); // export default function(state = initialState, action) {\n  // const { type, payload } = action \n\n  const {\n    type\n  } = action.type;\n  let payload;\n\n  if (action.payload) {\n    payload = action.payload;\n  }\n\n  switch (type) {\n    case ActionType.GET_FILM:\n      return { ...state,\n        film: payload,\n        loading: false\n      };\n\n    case ActionType.GET_FILMS:\n      return { ...state,\n        films: payload,\n        loading: false\n      };\n\n    case ActionType.UPDATE_FILM:\n      return { ...state,\n        film: payload,\n        loading: false\n      };\n\n    case ActionType.FILM_ERROR:\n      return { ...state,\n        error: payload,\n        loading: false\n      };\n    //this needed?\n\n    case ActionType.CLEAR_FILM:\n      return { ...state,\n        film: null,\n        films: [],\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default film;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/reducers/film.tsx"],"names":["ActionType","initialState","film","films","loading","error","state","action","console","log","type","payload","GET_FILM","GET_FILMS","UPDATE_FILM","FILM_ERROR","CLEAR_FILM"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAYC;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE,IADa;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,KAAK,EAAE;AAJY,CAArB;;AAOA,MAAMH,IAAI,GAAG,YAIa;AAAA,MAFxBI,KAEwB,uEAFGL,YAEH;AAAA,MADxBM,MACwB;AAEvBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,IAAnB,EAFuB,CAGxB;AACO;;AACD,QAAM;AAAEA,IAAAA;AAAF,MAAWH,MAAM,CAACG,IAAxB;AACA,MAAIC,OAAJ;;AACA,MAAGJ,MAAM,CAACI,OAAV,EAAmB;AACjBA,IAAAA,OAAO,GAAGJ,MAAM,CAACI,OAAjB;AACD;;AACD,UAAQD,IAAR;AACE,SAAKV,UAAU,CAACY,QAAhB;AACA,aAAO,EACL,GAAGN,KADE;AAELJ,QAAAA,IAAI,EAAES,OAFD;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKJ,UAAU,CAACa,SAAhB;AACA,aAAO,EACL,GAAGP,KADE;AAELH,QAAAA,KAAK,EAAEQ,OAFF;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKJ,UAAU,CAACc,WAAhB;AACA,aAAO,EACL,GAAGR,KADE;AAELJ,QAAAA,IAAI,EAAES,OAFD;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;;AAKA,SAAKJ,UAAU,CAACe,UAAhB;AACA,aAAO,EACL,GAAGT,KADE;AAELD,QAAAA,KAAK,EAAEM,OAFF;AAGLP,QAAAA,OAAO,EAAE;AAHJ,OAAP;AAKA;;AACA,SAAKJ,UAAU,CAACgB,UAAhB;AACA,aAAO,EACL,GAAGV,KADE;AAELJ,QAAAA,IAAI,EAAE,IAFD;AAGLC,QAAAA,KAAK,EAAE,EAHF;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMA;AACE,aAAOE,KAAP;AAlCJ;AAoCH,CAlDL;;AAoDE,eAAeJ,IAAf","sourcesContent":["import { ActionType } from '../actions/types';\nimport { ActionFilms } from './indexTypes';\n\ninterface RepositoriesState {\n  film: {} | null;\n  films: string[];\n  loading: boolean;\n  error: any; \n  // { \n  //   msg: string,\n  //   status: string,\n  // } | null\n};\n\nconst initialState = {\n  film: null,\n  films: [],\n  loading: true,\n  error: {}\n};\n\nconst film = (\n// export default function = (\n  state: RepositoriesState = initialState,\n  action: ActionFilms,\n  ): RepositoriesState => {\n\n   console.log(action.type)\n  // export default function(state = initialState, action) {\n         // const { type, payload } = action \n        const { type } = action.type;\n        let payload;  \n        if(action.payload) {\n          payload = action.payload; \n        }\n        switch (type) {\n          case ActionType.GET_FILM:\n          return {\n            ...state,\n            film: payload,\n            loading: false \n          };\n          case ActionType.GET_FILMS:\n          return {\n            ...state,\n            films: payload,\n            loading: false \n          };\n          case ActionType.UPDATE_FILM:\n          return {\n            ...state,\n            film: payload,\n            loading: false \n          }; \n          case ActionType.FILM_ERROR:\n          return {\n            ...state,\n            error: payload,\n            loading: false\n          }; \n          //this needed?\n          case ActionType.CLEAR_FILM:\n          return {\n            ...state,\n            film: null,\n            films: [],\n            loading: false\n          };\n          default:\n            return state\n        }\n    }\n\n  export default film;"]},"metadata":{},"sourceType":"module"}