{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/pages/BookingPage.tsx\";\nimport React, { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getFilmById } from '../actions/film';\nimport CheckoutFilm from '../components/checkout-film/Checkout-Film';\n\nconst BookingPage = _ref => {\n  let {\n    getFilmById,\n    filmBooking,\n    match,\n    history,\n    component\n  } = _ref;\n  //so this is where you do it\n  //maybe chnage this to the upated params version\n  useEffect(() => {\n    getFilmById(match.params.id);\n  }, []);\n  const {\n    film,\n    loading\n  } = filmBooking;\n\n  if (film) {\n    return /*#__PURE__*/React.createElement(CheckoutFilm, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 3\n      }\n    });\n  }\n};\n\nconst mapStateToProps = state => ({\n  filmBooking: state.film\n});\n\nexport default connect(mapStateToProps, {\n  getFilmById\n})(withRouter(BookingPage));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/pages/BookingPage.tsx"],"names":["React","useEffect","withRouter","connect","getFilmById","CheckoutFilm","BookingPage","filmBooking","match","history","component","params","id","film","loading","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,UAAT,QAAgD,kBAAhD;AACA,SAASC,OAAT,QAAqC,aAArC;AAGA,SAASC,WAAT,QAAwC,iBAAxC;AACA,OAAOC,YAAP,MAAyB,2CAAzB;;AAcA,MAAMC,WAAwC,GAAG,QAO3C;AAAA,MAP4C;AAEjDF,IAAAA,WAFiD;AAGjDG,IAAAA,WAHiD;AAIjDC,IAAAA,KAJiD;AAKjDC,IAAAA,OALiD;AAMjDC,IAAAA;AANiD,GAO5C;AACL;AACA;AACAT,EAAAA,SAAS,CAAC,MAAM;AACfG,IAAAA,WAAW,CAACI,KAAK,CAACG,MAAN,CAAaC,EAAd,CAAX;AACA,GAFQ,EAEN,EAFM,CAAT;AAIA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA;AAAR,MAAoBP,WAA1B;;AAEA,MAAGM,IAAH,EAAS;AACT,wBACC,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD;AAGC;AACD,CArBD;;AAwBA,MAAME,eAAe,GAAGC,KAAK,KAAK;AACjCT,EAAAA,WAAW,EAAES,KAAK,CAACH;AADc,CAAL,CAA7B;;AAIA,eAAeV,OAAO,CAACY,eAAD,EAAkB;AAAEX,EAAAA;AAAF,CAAlB,CAAP,CACdF,UAAU,CAACI,WAAD,CADI,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { withRouter, RouteComponentProps } from 'react-router-dom';\nimport { connect, useDispatch } from 'react-redux';\nimport { ticketType, filmType } from '../utils/componentTypes';\nimport { filmInterface, ChildComponentProps } from '../utils/componentTypes';\nimport { getFilmById, updateFilm } from '../actions/film';\nimport CheckoutFilm from '../components/checkout-film/Checkout-Film'\n\ninterface BookingProps {\n\t// updateFilm: () => void;\n\tgetFilmById: (id) => void;\n\tfilmBooking: filmInterface;\n\tpath: string,\n\tcomponent: React.ComponentType<any>;\n\tfilm: filmType;\n\tloading: boolean;\n}\n\ntype JointBookingProps = ChildComponentProps & BookingProps; \n\nconst BookingPage: React.FC<JointBookingProps> = ({\n\n\tgetFilmById,\n\tfilmBooking,\n\tmatch,\n\thistory,\n\tcomponent,\n}) => { \n\t//so this is where you do it\n\t//maybe chnage this to the upated params version\n\tuseEffect(() => {\n\t\tgetFilmById(match.params.id)\n\t}, []);\n\t\n\tconst { film, loading } = filmBooking;\n\n\tif(film) {\n\treturn (\n\t\t<CheckoutFilm/>\n\t\t)\n\t}\n};\n\n\nconst mapStateToProps = state => ({\n\tfilmBooking: state.film\n});\n\nexport default connect(mapStateToProps, { getFilmById  })(\n\twithRouter(BookingPage)\n);\n\n"]},"metadata":{},"sourceType":"module"}