{"ast":null,"code":"'use strict';\n\nvar Buffer = require('safe-buffer').Buffer; // Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\n\n\nfunction multipartDataGenerator(method, data, headers) {\n  var segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n  headers['Content-Type'] = 'multipart/form-data; boundary=' + segno;\n  var buffer = Buffer.alloc(0);\n\n  function push(l) {\n    var prevBuffer = buffer;\n    var newBuffer = l instanceof Buffer ? l : Buffer.from(l);\n    buffer = Buffer.alloc(prevBuffer.length + newBuffer.length + 2);\n    prevBuffer.copy(buffer);\n    newBuffer.copy(buffer, prevBuffer.length);\n    buffer.write('\\r\\n', buffer.length - 2);\n  }\n\n  function q(s) {\n    return '\"' + s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ') + '\"';\n  }\n\n  for (var k in data) {\n    var v = data[k];\n    push('--' + segno);\n\n    if (v.hasOwnProperty('data')) {\n      push('Content-Disposition: form-data; name=' + q(k) + '; filename=' + q(v.name || 'blob'));\n      push('Content-Type: ' + (v.type || 'application/octet-stream'));\n      push('');\n      push(v.data);\n    } else {\n      push('Content-Disposition: form-data; name=' + q(k));\n      push('');\n      push(v);\n    }\n  }\n\n  push('--' + segno + '--');\n  return buffer;\n}\n\nmodule.exports = multipartDataGenerator;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/node_modules/stripe/lib/MultipartDataGenerator.js"],"names":["Buffer","require","multipartDataGenerator","method","data","headers","segno","Math","round","random","toString","buffer","alloc","push","l","prevBuffer","newBuffer","from","length","copy","write","q","s","replace","k","v","hasOwnProperty","name","type","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,MAAM,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBD,MAApC,C,CAEA;AACA;AACA;;;AACA,SAASE,sBAAT,CAAgCC,MAAhC,EAAwCC,IAAxC,EAA8CC,OAA9C,EAAuD;AACrD,MAAIC,KAAK,GAAG,CAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,IAAmCF,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAApC,EAAsEC,QAAtE,EAAZ;AACAL,EAAAA,OAAO,CAAC,cAAD,CAAP,GAA2B,mCAAmCC,KAA9D;AACA,MAAIK,MAAM,GAAGX,MAAM,CAACY,KAAP,CAAa,CAAb,CAAb;;AAEA,WAASC,IAAT,CAAcC,CAAd,EAAiB;AACf,QAAIC,UAAU,GAAGJ,MAAjB;AACA,QAAIK,SAAS,GAAIF,CAAC,YAAYd,MAAd,GAAwBc,CAAxB,GAA4Bd,MAAM,CAACiB,IAAP,CAAYH,CAAZ,CAA5C;AACAH,IAAAA,MAAM,GAAGX,MAAM,CAACY,KAAP,CAAaG,UAAU,CAACG,MAAX,GAAoBF,SAAS,CAACE,MAA9B,GAAuC,CAApD,CAAT;AACAH,IAAAA,UAAU,CAACI,IAAX,CAAgBR,MAAhB;AACAK,IAAAA,SAAS,CAACG,IAAV,CAAeR,MAAf,EAAuBI,UAAU,CAACG,MAAlC;AACAP,IAAAA,MAAM,CAACS,KAAP,CAAa,MAAb,EAAqBT,MAAM,CAACO,MAAP,GAAgB,CAArC;AACD;;AAED,WAASG,CAAT,CAAWC,CAAX,EAAc;AACZ,WAAO,MAAMA,CAAC,CAACC,OAAF,CAAU,MAAV,EAAkB,KAAlB,EAAyBA,OAAzB,CAAiC,aAAjC,EAAgD,GAAhD,CAAN,GAA6D,GAApE;AACD;;AAED,OAAK,IAAIC,CAAT,IAAcpB,IAAd,EAAoB;AAClB,QAAIqB,CAAC,GAAGrB,IAAI,CAACoB,CAAD,CAAZ;AACAX,IAAAA,IAAI,CAAC,OAAOP,KAAR,CAAJ;;AACA,QAAImB,CAAC,CAACC,cAAF,CAAiB,MAAjB,CAAJ,EAA8B;AAC5Bb,MAAAA,IAAI,CAAC,0CAA0CQ,CAAC,CAACG,CAAD,CAA3C,GAAiD,aAAjD,GAAiEH,CAAC,CAACI,CAAC,CAACE,IAAF,IAAU,MAAX,CAAnE,CAAJ;AACAd,MAAAA,IAAI,CAAC,oBAAoBY,CAAC,CAACG,IAAF,IAAU,0BAA9B,CAAD,CAAJ;AACAf,MAAAA,IAAI,CAAC,EAAD,CAAJ;AACAA,MAAAA,IAAI,CAACY,CAAC,CAACrB,IAAH,CAAJ;AACD,KALD,MAKO;AACLS,MAAAA,IAAI,CAAC,0CAA0CQ,CAAC,CAACG,CAAD,CAA5C,CAAJ;AACAX,MAAAA,IAAI,CAAC,EAAD,CAAJ;AACAA,MAAAA,IAAI,CAACY,CAAD,CAAJ;AACD;AACF;;AACDZ,EAAAA,IAAI,CAAC,OAAOP,KAAP,GAAe,IAAhB,CAAJ;AAEA,SAAOK,MAAP;AACD;;AAEDkB,MAAM,CAACC,OAAP,GAAiB5B,sBAAjB","sourcesContent":["'use strict';\n\nvar Buffer = require('safe-buffer').Buffer;\n\n// Method for formatting HTTP body for the multipart/form-data specification\n// Mostly taken from Fermata.js\n// https://github.com/natevw/fermata/blob/5d9732a33d776ce925013a265935facd1626cc88/fermata.js#L315-L343\nfunction multipartDataGenerator(method, data, headers) {\n  var segno = (Math.round(Math.random() * 1e16) + Math.round(Math.random() * 1e16)).toString();\n  headers['Content-Type'] = ('multipart/form-data; boundary=' + segno);\n  var buffer = Buffer.alloc(0);\n\n  function push(l) {\n    var prevBuffer = buffer;\n    var newBuffer = (l instanceof Buffer) ? l : Buffer.from(l);\n    buffer = Buffer.alloc(prevBuffer.length + newBuffer.length + 2);\n    prevBuffer.copy(buffer);\n    newBuffer.copy(buffer, prevBuffer.length);\n    buffer.write('\\r\\n', buffer.length - 2);\n  }\n\n  function q(s) {\n    return '\"' + s.replace(/\"|\"/g, '%22').replace(/\\r\\n|\\r|\\n/g, ' ') + '\"';\n  }\n\n  for (var k in data) {\n    var v = data[k];\n    push('--' + segno);\n    if (v.hasOwnProperty('data')) {\n      push('Content-Disposition: form-data; name=' + q(k) + '; filename=' + q(v.name || 'blob'));\n      push('Content-Type: ' + (v.type || 'application/octet-stream'));\n      push('');\n      push(v.data);\n    } else {\n      push('Content-Disposition: form-data; name=' + q(k));\n      push('');\n      push(v);\n    }\n  }\n  push('--' + segno + '--');\n\n  return buffer;\n}\n\nmodule.exports = multipartDataGenerator;\n"]},"metadata":{},"sourceType":"script"}