{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/films/Films.tsx\";\nimport React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport Stack from 'react-bootstrap/Stack';\nimport { connect } from 'react-redux';\nimport Film from './Film';\nimport './Films.css';\n;\n\nconst Films = _ref => {\n  let {\n    film: {\n      films,\n      loading\n    }\n  } = _ref;\n  if (films === null) return null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"all-screenings-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 8\n    }\n  }, \"Latest films\")), /*#__PURE__*/React.createElement(Stack, {\n    direction: \"horizontal\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, films.slice(0, 8).map((item, index) => {\n    return;\n\n    /*#__PURE__*/\n    React.createElement(Film, {\n      index: index,\n      film: item,\n      key: item._id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    });\n  }))), /*#__PURE__*/React.createElement(Link, {\n    to: \"/film\",\n    className: \"view-all-link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 14\n    }\n  }, \"View all\")));\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default withRouter(connect(mapStateToProps)(Films)); // <div className=\"all-screenings\">\n//         \t<div>\n// \t    \t\t<h2 className=\"all-screenings-title\">Latest films</h2>\n// \t    \t</div>\t\n// \t    \t<div className=\"films-list\">\n// \t    \t{films.slice(0,8).map((item, index) => {\n// \t\t\t\treturn <Film\n// \t\t\t\tindex={index}\n// \t\t\t\tfilm={item}\n// \t\t\t\tkey={item._id}\n// \t    \t\t/>\n//           \t})\n//            }\n//             </div>\n//             <Link to='/film' className=\"view-all-link\">\n//            \t\t{/*<p>View all >></p>*/}\n//            \t\t<p>View all</p>\n//            \t</Link>\n//            </div>","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/films/Films.tsx"],"names":["React","Link","withRouter","Stack","connect","Film","Films","film","films","loading","slice","map","item","index","_id","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AAGA,OAAOC,KAAP,MAAkB,uBAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,aAAP;AAiBE;;AAEF,MAAMC,KAA2B,GAAG,QAE7B;AAAA,MAF8B;AACpCC,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAD8B,GAE9B;AACN,MAAID,KAAK,KAAK,IAAd,EAAoB,OAAO,IAAP;AACpB,sBAGQ;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADE,CADA,eAIH,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAECA,KAAK,CAACE,KAAN,CAAY,CAAZ,EAAc,CAAd,EAAiBC,GAAjB,CAAqB,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzC;;AAEA;AAAA,wBAAC,IAAD;AACA,MAAA,KAAK,EAAEA,KADP;AAEA,MAAA,IAAI,EAAED,IAFN;AAGA,MAAA,GAAG,EAAEA,IAAI,CAACE,GAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMQ,GATL,CAFD,CAFA,CAJG,eAsBG,oBAAC,IAAD;AAAM,IAAA,EAAE,EAAC,OAAT;AAAiB,IAAA,SAAS,EAAC,eAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFD,CAtBH,CAHR;AAiCA,CArCD;;AAuCA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADqB,CAAL,CAA7B;;AAIA,eAAeL,UAAU,CAACE,OAAO,CAACW,eAAD,CAAP,CAAyBT,KAAzB,CAAD,CAAzB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport Stack from 'react-bootstrap/Stack';\nimport { connect } from 'react-redux';\nimport Film from './Film';\nimport './Films.css';\n\ninterface FilmsProps {\n\tfilm: {\n\t\tfilms:Array<{\n\t        _id: number, \n\t\t    title: string,\n\t\t    date: number,\n\t\t    filmtime: number,\n\t\t    cinema: string,\n\t\t    image: string,\n\t\t    ticketPrice: number,\n\t\t    crowdfundTarget: number,\n\t\t    totalsoFar: number\n    \t\t}>;\n    \tloading: boolean;\n\t\t};\n\t};\n\nconst Films: React.FC<FilmsProps> = ({ \n\tfilm: {films, loading} \n\t}) => {\n\tif (films === null) return null;\n\treturn (\n\t\t\n\t\t\n        \t<div className=\"\">\n        \t<div>\n\t    \t\t<h2 className=\"all-screenings-title\">Latest films</h2>\n\t    \t</div>\t\n\t    \t<Stack direction=\"horizontal\">\n\t    \t\n\t    \t<div className=\"\">\n\t    \t\n\t    \t{films.slice(0,8).map((item, index) => {\n\t\t\t\treturn \n\t\t\n\t\t\t\t<Film\n\t\t\t\tindex={index}\n\t\t\t\tfilm={item}\n\t\t\t\tkey={item._id}\n\t    \t\t/>\n\t    \n          \t})\n           }\n            </div>\n           \n        \t</Stack>\n            <Link to='/film' className=\"view-all-link\">\n           \t\t{/*<p>View all >></p>*/}\n           \t\t<p>View all</p>\n           \t</Link>\n           </div>\n           \n        \n\t)\n}\n\nconst mapStateToProps = state => ({\n\tfilm: state.film\n});\n\nexport default withRouter(connect(mapStateToProps)(Films));\n\n// <div className=\"all-screenings\">\n//         \t<div>\n// \t    \t\t<h2 className=\"all-screenings-title\">Latest films</h2>\n// \t    \t</div>\t\n// \t    \t<div className=\"films-list\">\n\t    \t\n// \t    \t{films.slice(0,8).map((item, index) => {\n// \t\t\t\treturn <Film\n// \t\t\t\tindex={index}\n// \t\t\t\tfilm={item}\n// \t\t\t\tkey={item._id}\n// \t    \t\t/>\n//           \t})\n//            }\n//             </div>\n//             <Link to='/film' className=\"view-all-link\">\n//            \t\t{/*<p>View all >></p>*/}\n//            \t\t<p>View all</p>\n//            \t</Link>\n//            </div>"]},"metadata":{},"sourceType":"module"}