{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/films-page/FilmPage.js\";\nimport React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Footer from '../footer/Footer';\nimport { loadFilms } from '../../actions/film';\nimport Film from '../films/Film';\nimport '../films/Films.css';\n\nconst FilmPage = _ref => {\n  let {\n    loadFilms,\n    film: {\n      films,\n      loading\n    }\n  } = _ref;\n  useEffect(() => {\n    loadFilms();\n  }, [loadFilms]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"all-screenings\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    className: \"all-screenings-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 8\n    }\n  }, \"All our screenings\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"films-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }\n  }, films.map(item => /*#__PURE__*/React.createElement(Film, {\n    film: item,\n    key: item._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  })))), /*#__PURE__*/React.createElement(Footer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }\n  }));\n};\n\nFilmPage.propTypes = {\n  films: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  film: state.film\n});\n\nexport default connect(mapStateToProps, {\n  loadFilms\n})(FilmPage);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/films-page/FilmPage.js"],"names":["React","Fragment","useEffect","PropTypes","connect","Footer","loadFilms","Film","FilmPage","film","films","loading","map","item","_id","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAOC,IAAP,MAAiB,eAAjB;AACA,OAAO,oBAAP;;AAEA,MAAMC,QAAQ,GAAG,QAGV;AAAA,MAHW;AACjBF,IAAAA,SADiB;AAEjBG,IAAAA,IAAI,EAAE;AAACC,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAFW,GAGX;AAENT,EAAAA,SAAS,CAAC,MAAO;AACZI,IAAAA,SAAS;AACZ,GAFO,EAEL,CAACA,SAAD,CAFK,CAAT;AAIA,sBACC,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACO;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAI,IAAA,SAAS,EAAC,sBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADE,CADA,eAIH;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACCI,KAAK,CAACE,GAAN,CAAUC,IAAI,iBACjB,oBAAC,IAAD;AACA,IAAA,IAAI,EAAEA,IADN;AAEA,IAAA,GAAG,EAAEA,IAAI,CAACC,GAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,CADD,CAJG,CADP,eAeS,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfT,CADD;AAmBA,CA5BD;;AA8BAN,QAAQ,CAACO,SAAT,GAAqB;AACpBL,EAAAA,KAAK,EAAEP,SAAS,CAACa,MAAV,CAAiBC;AADJ,CAArB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCV,EAAAA,IAAI,EAAEU,KAAK,CAACV;AADqB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACc,eAAD,EAAkB;AAAEZ,EAAAA;AAAF,CAAlB,CAAP,CAAwCE,QAAxC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Footer from '../footer/Footer';\nimport { loadFilms } from '../../actions/film';\nimport Film from '../films/Film';\nimport '../films/Films.css';\n\nconst FilmPage = ({ \n\tloadFilms,\n\tfilm: {films, loading} \n\t}) => {\n\n\tuseEffect(() =>  {\n      loadFilms();  \n  }, [loadFilms]);\n\n\treturn (\n\t\t<Fragment>\n        \t<div className=\"all-screenings\">\n        \t<div>\n\t    \t\t<h2 className=\"all-screenings-title\">All our screenings</h2>\n\t    \t</div>\t\n\t    \t<div className=\"films-list\">\n\t    \t{films.map(item => (\n\t\t\t\t<Film\n\t\t\t\tfilm={item}\n\t\t\t\tkey={item._id}\n\t    \t\t/>\n          \t))\n           }\n            </div>\n           </div>\n           <Footer/>\n        </Fragment>    \t\n\t)\n}\n\nFilmPage.propTypes = {\n\tfilms: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n\tfilm: state.film\n});\n\nexport default connect(mapStateToProps, { loadFilms })(FilmPage);"]},"metadata":{},"sourceType":"module"}