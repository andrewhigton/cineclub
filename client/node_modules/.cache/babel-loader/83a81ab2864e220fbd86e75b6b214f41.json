{"ast":null,"code":"import axios from 'axios';\nimport { ActionType } from '../types'; // import { setAlert } from './alert';\n\nimport { GET_FILM, // UPDATE_FILM,\nGET_FILMS, // CLEAR_FILM,\nFILM_ERROR // DELETE_FILM\n} from './types'; // Get all Films\n\nexport const loadFilms = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/film');\n    dispatch({\n      type: ActionType.GET_FILMS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'FILM_ERROR' //payload: { msg: err.response.statusText, status: err.response.status }\n\n    });\n  }\n}; //Get film by ID\n\nexport const getFilmById = film_id => async dispatch => {\n  dispatch({\n    type: CLEAR_FILM\n  });\n\n  try {\n    const res = await axios.get(`/api/film/${film_id}`); // .populate('film', ['title', 'cinema']);\n\n    dispatch({\n      type: ActionType.GET_FILM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n}; // create film\n\nexport const createFilm = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/film/create-film', formData, config);\n    dispatch({\n      type: ActionType.GET_FILM,\n      payload: res.data\n    });\n    history.push('/film/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(errors.forEach(error => dispatch(alert(error.msg, 'danger'))));\n    }\n\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const updateFilm = (formData, history) => async dispatch => {\n  dispatch({\n    type: 'CLEAR_FILM'\n  });\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.put('/api/film/booking', formData, config);\n    dispatch({\n      type: 'UPDATE_FILM',\n      payload: res.data\n    });\n    alert('Thanks for your booking', 'success');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(errors.forEach(error => dispatch(alert(error.msg, 'danger'))));\n    }\n\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};\nexport const deleteFilm = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/tickets/${id}`);\n    dispatch({\n      type: 'DELETE_FILM',\n      payload: res.data\n    });\n    alert('Tickets Removed', 'success');\n  } catch (err) {\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: {\n        msg: err.response.statusText,\n        status: err.response.status\n      }\n    });\n  }\n};","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/actions/film.js"],"names":["axios","ActionType","GET_FILM","GET_FILMS","FILM_ERROR","loadFilms","dispatch","res","get","type","payload","data","err","getFilmById","film_id","CLEAR_FILM","msg","response","statusText","status","createFilm","formData","history","config","headers","post","push","errors","alert","forEach","error","updateFilm","put","deleteFilm","id","delete"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ActionType } from '../types';\n// import { setAlert } from './alert';\nimport {\n  GET_FILM,\n  // UPDATE_FILM,\n  GET_FILMS,\n  // CLEAR_FILM,\n  FILM_ERROR,\n  // DELETE_FILM\n} from './types';\n\n// Get all Films\nexport const loadFilms = () => async dispatch => {\n  try {\n    const res = await axios.get('/api/film');\n\n    dispatch({\n      type: ActionType.GET_FILMS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'FILM_ERROR',\n      //payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n  };\n\n//Get film by ID\nexport const getFilmById = film_id => async dispatch => {\n  dispatch({ type: CLEAR_FILM });\n  try {\n    const res = await axios.get(`/api/film/${film_id}`)\n    // .populate('film', ['title', 'cinema']);\n    \n    dispatch({\n      type: ActionType.GET_FILM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n// create film\nexport const createFilm = ( formData, history ) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  \n    const res = await axios.post('/api/film/create-film', formData, config);    \n    dispatch({\n      type: ActionType.GET_FILM,\n      payload: res.data\n    });\n    history.push('/film/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(errors.forEach(error => dispatch(alert(error.msg, 'danger'))));\n    }\n\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const updateFilm = (formData, history) => async dispatch => {\n  dispatch({ type: 'CLEAR_FILM' });\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.put('/api/film/booking', formData, config);\n    dispatch({\n      type: 'UPDATE_FILM',\n      payload: res.data\n      });\n    alert('Thanks for your booking', 'success');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(errors.forEach(error => dispatch(alert(error.msg, 'danger'))));\n    }\n\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\nexport const deleteFilm = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/profile/tickets/${id}`);\n\n    dispatch({\n      type: 'DELETE_FILM',\n      payload: res.data\n    });\n\n    alert('Tickets Removed', 'success');\n  } catch (err) {\n    dispatch({\n      type: 'FILM_ERROR',\n      payload: { msg: err.response.statusText, status: err.response.status }\n    });\n  }\n};\n\n\n"]},"metadata":{},"sourceType":"module"}