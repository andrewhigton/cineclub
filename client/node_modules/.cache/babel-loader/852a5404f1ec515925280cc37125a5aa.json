{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andrewhigton/Documents/code/typescript/cineclub/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/andrewhigton/Documents/code/typescript/cineclub/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/andrewhigton/Documents/code/typescript/cineclub/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import{connect}from'react-redux';import{useStripe,useElements,CardNumberElement,CardCvcElement,CardExpiryElement}from'@stripe/react-stripe-js';import{updateUserTickets as _updateUserTickets}from'../../actions/auth';import{updateFilm as _updateFilm}from'../../actions/film';import Spinner from'../spinner/Spinner';import'../checkout-film/checkoutfilm.css';import axios from'axios';//global vars for dispatch \nvar useHistory;var ticketDataForDispatch;var filmDataForDispatch;var StripeCheckoutButton=function StripeCheckoutButton(_ref){var filmData=_ref.filmData,ticketData=_ref.ticketData,price=_ref.price,updateUserTickets=_ref.updateUserTickets,updateFilm=_ref.updateFilm,history=_ref.history;var stripe=useStripe();var elements=useElements();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isProcessingPayment=_useState2[0],setIsProcessingPayment=_useState2[1];useHistory=history;ticketDataForDispatch=ticketData;filmDataForDispatch=filmData;var paymentHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(e){var _paymentResult$paymen,response,clientSecret,cardDetails,paymentResult;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:e.preventDefault();if(!(!stripe||!elements)){_context.next=3;break;}return _context.abrupt(\"return\");case 3:isProcessingPayment=true;_context.prev=4;_context.next=7;return axios.post('http://localhost:5000/api/film/payment',{amount:price});case 7:response=_context.sent;clientSecret=response.data;cardDetails=elements.getElement(CardNumberElement);if(!(cardDetails===null)){_context.next=12;break;}return _context.abrupt(\"return\");case 12:_context.next=14;return stripe.confirmCardPayment(clientSecret,{payment_method:{card:cardDetails,billing_details:{name:'Andrew Higton'}}});case 14:paymentResult=_context.sent;if((paymentResult===null||paymentResult===void 0?void 0:(_paymentResult$paymen=paymentResult.paymentIntent)===null||_paymentResult$paymen===void 0?void 0:_paymentResult$paymen.status)==='succeeded'){updateUserTickets(ticketDataForDispatch);updateFilm(filmDataForDispatch);}setIsProcessingPayment(false);_context.next=22;break;case 19:_context.prev=19;_context.t0=_context[\"catch\"](4);if(_context.t0 instanceof Error){alert(_context.t0.message);}case 22:case\"end\":return _context.stop();}}},_callee,null,[[4,19]]);}));return function paymentHandler(_x){return _ref2.apply(this,arguments);};}();var inputStyle={fontWeight:'1000',fontSize:'17px',lineHeight:'35px'};return isProcessingPayment?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(\"div\",{className:\"checkout\"},/*#__PURE__*/React.createElement(\"h3\",null,\"Card Payment\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:paymentHandler},/*#__PURE__*/React.createElement(CardNumberElement,{options:{style:{base:inputStyle}}}),/*#__PURE__*/React.createElement(CardExpiryElement,{options:{style:{base:inputStyle}}}),/*#__PURE__*/React.createElement(CardCvcElement,{options:{style:{base:inputStyle}}}),/*#__PURE__*/React.createElement(\"button\",{className:\"checkout-button\",disabled:isProcessingPayment},\"Pay Now\")));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{updateUserTickets:function updateUserTickets(){return dispatch(_updateUserTickets(ticketDataForDispatch,useHistory));},updateFilm:function updateFilm(){return dispatch(_updateFilm(filmDataForDispatch));}};};export default connect(null,mapDispatchToProps)(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/stripe-button/stripe-button.tsx"],"names":["React","useState","connect","useStripe","useElements","CardNumberElement","CardCvcElement","CardExpiryElement","updateUserTickets","updateFilm","Spinner","axios","useHistory","ticketDataForDispatch","filmDataForDispatch","StripeCheckoutButton","filmData","ticketData","price","history","stripe","elements","isProcessingPayment","setIsProcessingPayment","paymentHandler","e","preventDefault","post","amount","response","clientSecret","data","cardDetails","getElement","confirmCardPayment","payment_method","card","billing_details","name","paymentResult","paymentIntent","status","Error","alert","message","inputStyle","fontWeight","fontSize","lineHeight","style","base","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport {  \n\n\tuseStripe, \n\tuseElements, \n\tCardNumberElement, \n\tCardCvcElement, \n\tCardExpiryElement  \n} from '@stripe/react-stripe-js';\nimport { updateUserTickets } from '../../actions/auth';\nimport { updateFilm } from '../../actions/film';\nimport { ticketType, filmType } from '../../utils/componentTypes';\nimport Spinner from '../spinner/Spinner';\nimport '../checkout-film/checkoutfilm.css'\nimport axios from 'axios';\n\ninterface TicketFilmTypes {\n\tfilmData: filmType;\n\tticketData: ticketType;\n\tprice: number;\n\tupdateUserTickets: (ticketDataForDispatch) => void; \n\tupdateFilm: (filmDataForDispatch) => void; \n\thistory;\n}\n\n//global vars for dispatch \nlet useHistory;\nlet ticketDataForDispatch;\nlet filmDataForDispatch;\n\nconst StripeCheckoutButton: React.FC<TicketFilmTypes> = ({\n\tfilmData, \n\tticketData, \n\tprice,\n\tupdateUserTickets,\n\tupdateFilm,\n\thistory\n\t}) => {\n\nconst stripe = useStripe();\nconst elements = useElements();\n\nlet [isProcessingPayment, setIsProcessingPayment] = useState(false)\n\nuseHistory = history; \nticketDataForDispatch = ticketData;\nfilmDataForDispatch = filmData;\n\nconst paymentHandler = async (e: FormEvent<HTMLFormElement>) => {\n\n\te.preventDefault();\n\tif(!stripe || !elements) {\n\t\treturn;\n\t}\n\n\tisProcessingPayment = true;\n\n\ttry  {\n\tconst response = await axios.post('http://localhost:5000/api/film/payment', {\n  amount: price,\n\t}\n) \n\t\n\t\tconst clientSecret = response.data;\n\n\t\tconst cardDetails = elements.getElement(CardNumberElement)\n\t\t\n\n\t\tif(cardDetails === null) return;\n\n    const paymentResult = await stripe.confirmCardPayment(clientSecret, {\n      payment_method: {\n        card: cardDetails,\n        billing_details: {\n          name: 'Andrew Higton',\n        },\n      },\n    });\n    \n    if(paymentResult?.paymentIntent?.status === 'succeeded') {\n    \tupdateUserTickets(ticketDataForDispatch);\n\t\t\tupdateFilm(filmDataForDispatch); \n\n    }\n    \n    setIsProcessingPayment(false);\t\n\n\t\t} catch (err) {\n\t\t\tif (err instanceof Error) {\n\t\t  alert(err.message);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst inputStyle = {\n      fontWeight: '1000',\n      fontSize: '17px',\n      lineHeight: '35px'\n\t\t}\n\n\treturn isProcessingPayment ? (\n\t\t<Spinner />\n\t\t) : (\n\t\t\t<div className='checkout'>\n\t\t\t\t<h3>Card Payment</h3>\n\t\t\t\t<form onSubmit={paymentHandler}>\n\t\t\t\t\t<CardNumberElement \n\t\t\t\t\toptions={{\n   \t\t\t\t\tstyle: {\n     \t\t\t\t\tbase: inputStyle,\n\t\t\t\t   },\n\t\t\t\t }}\n\t\t\t\t />\n\t\t\t\t\t<CardExpiryElement \n\t\t\t\t\t\toptions={{\n\t   \t\t\t\t\tstyle: {\n\t     \t\t\t\t\tbase: inputStyle,\n\t\t\t\t\t   },\n\t\t\t\t\t }}\n\t\t\t\t\t/>\n\t\t\t\t\t<CardCvcElement \n\t\t\t\t\toptions={{\n   \t\t\t\t\tstyle: {\n     \t\t\t\t\tbase: inputStyle,\n\t\t\t\t\t   },\n\t\t\t\t\t }}\n\t\t\t\t\t/>\n\t\t\t\t\t<button className='checkout-button' \tdisabled={isProcessingPayment}>Pay Now</button>\n\t\t\t\t</form>\n\t\t\t</div>\n\n\t\t )\n\t}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n     updateUserTickets: () => dispatch(updateUserTickets(ticketDataForDispatch, useHistory)),\n     updateFilm: () => dispatch(updateFilm(filmDataForDispatch)) \n  }\n}\n\nexport default connect(null, mapDispatchToProps)(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}