{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css';\n;\nlet ticketDataForDispatch; // let filmDataForDispatch;\n// let ticketDataForDispatch = {\n//   cinema: \"Chester Storyhouse\",\n// cost: 8,\n// crowdfundTarget: 90,\n// date: \"2021-06-05T00:00:00.000Z\",\n// numberOfTickets: 1,\n// ticketPrice: 8,  \n// title: \"Parasite\",\n// totalsoFar: 75,\n// };\n\nconst CheckoutFilm = _ref => {\n  let {\n    films // updateUserTickets,\n\n  } = _ref;\n  const {\n    film,\n    loading\n  } = films;\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n  let [bookingCost, setBookingCost] = useState(0);\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  }); // filmDataForDispatch = filmData;\n\n  ticketDataForDispatch = ticketData;\n  console.log('ticket ', ticketDataForDispatch);\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n    updateUserTickets(ticketDataForDispatch); // console.log('call on page')\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  }; // const callHandler = (e: React.FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault()\n  //   console.log('call')\n  // }\n  //ok, put all of this in state. \n  //fetch state from stripe, in mapstate, \n  //dispatch to mongo once it is complete\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }\n  }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n    price: bookingCost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"checkout-button btn btn-back\",\n    to: \"/film/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 13\n    }\n  }, \"Go Back\")))));\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    //you;re not calling this anywhere. what happens if you do? \n    updateUserTickets: () => dispatch(updateUserTickets(ticketDataForDispatch)) // updateFilm: () => dispatch(filmDataForDispatch) \n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutFilm); //export default connect(mapStateToProps)(CheckoutFilm); \n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx"],"names":["React","useState","connect","Link","StripeCheckoutButton","updateUserTickets","ticketDataForDispatch","CheckoutFilm","films","film","loading","filmData","setFilmData","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","bookingCost","setBookingCost","ticketData","setTicketData","numberOfTickets","cost","console","log","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { updateUserTickets } from '../../actions/auth';\nimport { updateFilm } from '../../actions/film';\n\nimport './checkoutfilm.css'\n\ninterface CheckoutFilmProps {\n  films: filmInterface;\n  film: filmType;\n  loading: boolean;\n  // updateUserTickets: (ticketDataForDispatch) => void; \n  // price: number;\n  };\n\nlet ticketDataForDispatch;\n// let filmDataForDispatch;\n// let ticketDataForDispatch = {\n//   cinema: \"Chester Storyhouse\",\n// cost: 8,\n// crowdfundTarget: 90,\n// date: \"2021-06-05T00:00:00.000Z\",\n// numberOfTickets: 1,\n// ticketPrice: 8,  \n// title: \"Parasite\",\n// totalsoFar: 75,\n// };\n  \nconst CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n    films, \n    // updateUserTickets,\n  }) => {\n   \n\n  const { film, loading } = films;\n\n  const [filmData, setFilmData] = useState<filmType>({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState<number>(0);\n\n  const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n    // filmDataForDispatch = filmData;\n    ticketDataForDispatch = ticketData\n    console.log('ticket ', ticketDataForDispatch)\n\n    const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n    updateUserTickets(ticketDataForDispatch)\n    // console.log('call on page')\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n\n\n  // const callHandler = (e: React.FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault()\n  //   console.log('call')\n  // }\n  //ok, put all of this in state. \n  //fetch state from stripe, in mapstate, \n  //dispatch to mongo once it is complete\n\n \n  return (\n      <>\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div className=\"form-ticket\">   \n            <input\n              type='number'\n              min='0'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n              <StripeCheckoutButton\n               price={bookingCost} \n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n        </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    //you;re not calling this anywhere. what happens if you do? \n     updateUserTickets: () => dispatch(updateUserTickets(ticketDataForDispatch)),\n     // updateFilm: () => dispatch(filmDataForDispatch) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutFilm); \n//export default connect(mapStateToProps)(CheckoutFilm); \n\n\n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)\n"]},"metadata":{},"sourceType":"module"}