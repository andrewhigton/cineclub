{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/stripe-button/stripe-button.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { updateFilm } from '../../actions/film';\nimport { updateUserTickets } from '../../actions/auth';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StripeCheckoutButton = _ref => {\n  let {\n    price,\n    filmData,\n    ticketData,\n    updateFilm,\n    updateUserTickets,\n    history\n  } = _ref;\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_GxoLwpaJRAn1kdTQGlL8EwZa00qqtVHbM3';\n\n  const onToken = token => {\n    if (priceForStripe === '' || priceForStripe < 1) {\n      alert('Please add tickets before submitting');\n      return;\n    }\n\n    axios({\n      url: '/api/film/payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }, onPayment()).then(response => {\n      alert('Payment succesful. We have sent your tickets to your email address and will notify when the film has been booked');\n      window.location.replace('http://localhost:3000/film/dashboard');\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('Payment error. Please use the provided credit card details');\n    });\n  };\n\n  const onPayment = () => {\n    updateFilm(filmData, history);\n    updateUserTickets(ticketData, history);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"how-it-works\",\n    children: /*#__PURE__*/_jsxDEV(StripeCheckout, {\n      label: \"Pay now\",\n      name: \"Saturday Cinema Club\",\n      billingAddress: true,\n      shippingAddress: true,\n      description: `Your total is £${price}`,\n      amount: priceForStripe,\n      panelLabel: \"Pay now\",\n      token: onToken,\n      stripeKey: publishableKey,\n      style: {\n        'margin': '2vh 0vh 0vw -5vw'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 3\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 3\n  }, this);\n};\n\n_c = StripeCheckoutButton;\n\nconst mapStateToProps = state => ({\n  film: state.film,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  updateUserTickets\n})(StripeCheckoutButton);\n\nvar _c;\n\n$RefreshReg$(_c, \"StripeCheckoutButton\");","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/stripe-button/stripe-button.js"],"names":["React","connect","StripeCheckout","updateFilm","updateUserTickets","axios","StripeCheckoutButton","price","filmData","ticketData","history","priceForStripe","publishableKey","onToken","token","alert","url","method","data","amount","onPayment","then","response","window","location","replace","catch","error","console","log","JSON","parse","mapStateToProps","state","film","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,MAAMC,oBAAoB,GAAG,QAOtB;AAAA,MAPuB;AAC7BC,IAAAA,KAD6B;AAE7BC,IAAAA,QAF6B;AAG7BC,IAAAA,UAH6B;AAI7BN,IAAAA,UAJ6B;AAK3BC,IAAAA,iBAL2B;AAM7BM,IAAAA;AAN6B,GAOvB;AAEN,QAAMC,cAAc,GAAGJ,KAAK,GAAG,GAA/B;AACE,QAAMK,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACzB,QAAGH,cAAc,KAAK,EAAnB,IAAyBA,cAAc,GAAG,CAA7C,EAAgD;AAC/CI,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACA;AACA;;AACDV,IAAAA,KAAK,CAAC;AACLW,MAAAA,GAAG,EAAE,mBADA;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAER,cADH;AAELG,QAAAA;AAFK;AAHD,KAAD,EAODM,SAAS,EAPR,CAAL,CAQCC,IARD,CAQMC,QAAQ,IAAI;AAChBP,MAAAA,KAAK,CAAC,kHAAD,CAAL;AACAQ,MAAAA,MAAM,CAACC,QAAP,CAAgBC,OAAhB,CAAwB,sCAAxB;AACA,KAXF,EAYCC,KAZD,CAYOC,KAAK,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACCZ,MAAAA,KAAK,CAAC,4DAAD,CAAL;AACA,KAfF;AAgBD,GArBC;;AAuBA,QAAMK,SAAS,GAAG,MAAM;AACtBjB,IAAAA,UAAU,CAACK,QAAD,EAAWE,OAAX,CAAV;AACAN,IAAAA,iBAAiB,CAACK,UAAD,EAAaC,OAAb,CAAjB;AACD,GAHD;;AAKF,sBACC;AACA,IAAA,SAAS,EAAC,cADV;AAAA,2BAEA,QAAC,cAAD;AACA,MAAA,KAAK,EAAC,SADN;AAEA,MAAA,IAAI,EAAC,sBAFL;AAGA,MAAA,cAAc,MAHd;AAIA,MAAA,eAAe,MAJf;AAKA,MAAA,WAAW,EAAG,kBAAiBH,KAAM,EALrC;AAMA,MAAA,MAAM,EAAEI,cANR;AAOA,MAAA,UAAU,EAAC,SAPX;AAQA,MAAA,KAAK,EAAEE,OARP;AASA,MAAA,SAAS,EAAED,cATX;AAUA,MAAA,KAAK,EAAE;AAAC,kBAAS;AAAV;AAVP;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,UADD;AAiBC,CAzDF;;KAAMN,oB;;AA2DN,MAAM0B,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADoB;AAEhCC,EAAAA,IAAI,EAAEF,KAAK,CAACE;AAFoB,CAAL,CAA7B;;AAKA,eAAelC,OAAO,CACpB+B,eADoB,EACH;AACjB7B,EAAAA,UADiB;AAEjBC,EAAAA;AAFiB,CADG,CAAP,CAIZE,oBAJY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { updateFilm } from '../../actions/film';\nimport { updateUserTickets } from '../../actions/auth';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = ({ \n\tprice, \n\tfilmData, \n\tticketData, \n\tupdateFilm, \n  \tupdateUserTickets,\n\thistory \n\t}) => {\n\n\tconst priceForStripe = price * 100;\n\t\t\tconst publishableKey = 'pk_test_GxoLwpaJRAn1kdTQGlL8EwZa00qqtVHbM3';\n\t\t\t\n\t\t\tconst onToken = token => {\n\t\t\tif(priceForStripe === '' || priceForStripe < 1) {\n\t\t\t\talert('Please add tickets before submitting');\t\n\t\t\t\treturn; \n\t\t\t}\n\t\t\taxios({ \n\t\t\t\turl: '/api/film/payment', \n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tamount: priceForStripe,\n\t\t\t\t\ttoken\n\t\t\t\t}\n\t\t\t }, onPayment())\n\t\t\t.then(response => {\n\t\t\t \talert('Payment succesful. We have sent your tickets to your email address and will notify when the film has been booked');\t\n\t\t\t \twindow.location.replace('http://localhost:3000/film/dashboard');\n\t\t\t })\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log('Payment error: ', JSON.parse(error)); \t\n\t\t\t \talert('Payment error. Please use the provided credit card details');\t\n\t\t\t }) \n\t} \n\n  \tconst onPayment = () => {\n\t    updateFilm(filmData, history);\n\t    updateUserTickets(ticketData, history);\n  \t};\n\n\treturn (\n\t\t<div \n\t\tclassName='how-it-works'>\n\t\t<StripeCheckout\n\t\tlabel='Pay now'\n\t\tname='Saturday Cinema Club'\n\t\tbillingAddress\n\t\tshippingAddress\n\t\tdescription={`Your total is £${price}`}\n\t\tamount={priceForStripe}\n\t\tpanelLabel='Pay now'\n\t\ttoken={onToken}\n\t\tstripeKey={publishableKey}\n\t\tstyle={{'margin':'2vh 0vh 0vw -5vw'}}\n\t\t/>\n\t\t</div>\n\t\t)\n\t}\n\nconst mapStateToProps = state => ({\n  film: state.film,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps, { \n  updateFilm, \n  updateUserTickets \n})(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}