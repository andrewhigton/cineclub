{"ast":null,"code":"import { ActionType } from '../actions/types';\n;\nconst initialState = {\n  film: null,\n  films: [] || null,\n  filmLoading: true,\n  error: {}\n};\n\nconst film = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  let payload;\n\n  if (action.payload) {\n    payload = action.payload;\n  }\n\n  switch (action.type) {\n    case ActionType.GET_FILM:\n      return { ...state,\n        film: payload,\n        filmLoading: false\n      };\n\n    case ActionType.GET_FILMS:\n      return { ...state,\n        films: payload,\n        filmLoading: false\n      };\n\n    case ActionType.UPDATE_FILM:\n      return { ...state,\n        film: payload,\n        filmLoading: false\n      };\n\n    case ActionType.FILM_ERROR:\n      return { ...state,\n        error: payload,\n        filmLoading: false\n      };\n    //this needed?\n\n    case ActionType.CLEAR_FILM:\n      return { ...state,\n        film: null,\n        films: [],\n        filmLoading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default film;","map":{"version":3,"names":["ActionType","initialState","film","films","filmLoading","error","state","action","payload","type","GET_FILM","GET_FILMS","UPDATE_FILM","FILM_ERROR","CLEAR_FILM"],"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/reducers/film.tsx"],"sourcesContent":["import { ActionType } from '../actions/types';\nimport { ActionFilms } from './indexTypes';\n\nexport interface FilmInitialStateType {\n  film: {} | null;\n  films: string[];\n  filmLoading: boolean;\n  error: any;\n};\n\nconst initialState: FilmInitialStateType = {\n  film: null,\n  films: [] || null,\n  filmLoading: true,\n  error: {}\n};\n\nconst film = (\n  state = initialState,\n  action: ActionFilms,\n  ) => {\n        let payload;  \n        if(action.payload) {\n          payload = action.payload; \n        }\n        switch (action.type) {\n          case ActionType.GET_FILM:\n          return {\n            ...state,\n            film: payload,\n            filmLoading: false \n          };\n          case ActionType.GET_FILMS:\n          return {\n            ...state,\n            films: payload,\n            filmLoading: false \n          };\n          case ActionType.UPDATE_FILM:\n          return {\n            ...state,\n            film: payload,\n            filmLoading: false \n          }; \n          case ActionType.FILM_ERROR:\n          return {\n            ...state,\n            error: payload,\n            filmLoading: false\n          }; \n          //this needed?\n          case ActionType.CLEAR_FILM:\n          return {\n            ...state,\n            film: null,\n            films: [],\n            filmLoading: false\n          };\n          default:\n            return state\n        }\n    }\n\n  export default film;"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAQC;AAED,MAAMC,YAAkC,GAAG;EACzCC,IAAI,EAAE,IADmC;EAEzCC,KAAK,EAAE,MAAM,IAF4B;EAGzCC,WAAW,EAAE,IAH4B;EAIzCC,KAAK,EAAE;AAJkC,CAA3C;;AAOA,MAAMH,IAAI,GAAG,YAGN;EAAA,IAFLI,KAEK,uEAFGL,YAEH;EAAA,IADLM,MACK;EACC,IAAIC,OAAJ;;EACA,IAAGD,MAAM,CAACC,OAAV,EAAmB;IACjBA,OAAO,GAAGD,MAAM,CAACC,OAAjB;EACD;;EACD,QAAQD,MAAM,CAACE,IAAf;IACE,KAAKT,UAAU,CAACU,QAAhB;MACA,OAAO,EACL,GAAGJ,KADE;QAELJ,IAAI,EAAEM,OAFD;QAGLJ,WAAW,EAAE;MAHR,CAAP;;IAKA,KAAKJ,UAAU,CAACW,SAAhB;MACA,OAAO,EACL,GAAGL,KADE;QAELH,KAAK,EAAEK,OAFF;QAGLJ,WAAW,EAAE;MAHR,CAAP;;IAKA,KAAKJ,UAAU,CAACY,WAAhB;MACA,OAAO,EACL,GAAGN,KADE;QAELJ,IAAI,EAAEM,OAFD;QAGLJ,WAAW,EAAE;MAHR,CAAP;;IAKA,KAAKJ,UAAU,CAACa,UAAhB;MACA,OAAO,EACL,GAAGP,KADE;QAELD,KAAK,EAAEG,OAFF;QAGLJ,WAAW,EAAE;MAHR,CAAP;IAKA;;IACA,KAAKJ,UAAU,CAACc,UAAhB;MACA,OAAO,EACL,GAAGR,KADE;QAELJ,IAAI,EAAE,IAFD;QAGLC,KAAK,EAAE,EAHF;QAILC,WAAW,EAAE;MAJR,CAAP;;IAMA;MACE,OAAOE,KAAP;EAlCJ;AAoCH,CA5CL;;AA8CE,eAAeJ,IAAf"},"metadata":{},"sourceType":"module"}