{"ast":null,"code":"import axios from 'axios';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, UPDATE_USER, LOGIN_SUCCESS, LOGIN_FAIL, LOGOUT, AUTH_ERROR } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load User\n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  console.log('called data');\n\n  try {\n    const res = await axios.get('/api/auth');\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err);\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n}; // Register User\n\nexport const register = _ref => {\n  let {\n    name,\n    email,\n    password\n  } = _ref;\n  return async dispatch => {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const body = JSON.stringify({\n      name,\n      email,\n      password\n    });\n\n    try {\n      const res = await axios.post('/api/users', body, config);\n      dispatch({\n        type: REGISTER_SUCCESS,\n        payload: res.data\n      });\n      dispatch(loadUser());\n    } catch (err) {\n      const errors = err.response.data.errors;\n\n      if (errors) {\n        console.log(err);\n        alert(err);\n      }\n\n      dispatch({\n        type: REGISTER_FAIL\n      });\n    }\n  };\n}; //Login User\n\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/auth', body, config);\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(errors);\n      dispatch({\n        type: LOGIN_FAIL\n      });\n    }\n  }\n}; // Add Tickets\n\nexport const updateUserTickets = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const res = await axios.post('/api/users/ticket', formData, config);\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data\n    }); //history.push('/film/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      alert(errors);\n      console.log(errors);\n    }\n  }\n};\nexport const deleteTickets = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/tickets/${id}`);\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    alert(err.response.statusText);\n    console.log(err.response.statusText);\n  }\n}; //Logout\n\nexport const logout = () => dispatch => {\n  dispatch({\n    type: LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/actions/auth.js"],"names":["axios","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","UPDATE_USER","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","console","log","res","get","type","payload","data","err","register","name","email","password","config","headers","body","JSON","stringify","post","errors","response","alert","login","updateUserTickets","formData","history","deleteTickets","id","delete","statusText","logout"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  UPDATE_USER,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  AUTH_ERROR\n} from './types';\n\nimport setAuthToken from '../utils/setAuthToken';\n\n// Load User\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n  console.log('called data');\n  try {\n    const res = await axios.get('/api/auth');\n    \n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    console.log(err)\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = ({ name, email, password }) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ name, email, password });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    \n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n    } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      console.log(err)\n      alert(err)\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n//Login User\nexport const login = (email, password) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n\n  const body = JSON.stringify({ email, password });\n  \n  try {\n    const res = await axios.post('/api/auth', body, config);\n    \n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n     dispatch(loadUser());\n    \n  } \n  catch (err) {\n    \n    const errors = err.response.data.errors;\n    if (errors) {\n      alert(errors)\n      dispatch({\n      type: LOGIN_FAIL\n    });\n    }\n  }\n\n};\n\n// Add Tickets\nexport const updateUserTickets = (formData, history) => async dispatch => {\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n    const res = await axios.post('/api/users/ticket', formData, config);\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data\n    });\n    //history.push('/film/dashboard');\n  } catch (err) {\n    const errors = err.response.data.errors;\n    if (errors) {\n      alert(errors)\n      console.log(errors)\n    }\n  }\n};\n\nexport const deleteTickets = id => async dispatch => {\n  try {\n    const res = await axios.delete(`/api/tickets/${id}`);\n\n    dispatch({\n      type: UPDATE_USER,\n      payload: res.data\n    });\n  } catch (err) {\n    alert(err.response.statusText)\n    console.log(err.response.statusText)\n    \n  }\n};\n\n//Logout\nexport const logout = () => dispatch => {\n  dispatch({ type: LOGOUT });\n};"]},"metadata":{},"sourceType":"module"}