{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.jsx\";\nimport React, { useState, FormEvent } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { stripePromise } from '../../utils/stripe.utils';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType } from '../componentTypes/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button'; // import { updateUserTickets } from '../../actions/auth';\n\nimport './checkoutfilm.css'; // interface ChildComponentProps extends RouteComponentProps<any> {\n//   // history: any;\n//   match: any;\n//   location: any;\n// }\n// interface CheckoutFilmProps {\n//   films: filmInterface;\n//   // ticketData: ticketType \n//   // loading: boolean;\n//   };\n// type JointCheckoutFilmProps = ChildComponentProps & CheckoutFilmProps;\n// interface filmTypeInterface {\n//         _id: string,\n//         user: string,\n//         title: string,\n//         date: string,\n//         cinema: string,\n//         image: string,\n//         ticketPrice: string,\n//         crowdfundTarget: number,\n//         totalsoFar: number\n//       };\n// const CheckoutFilm: React.FC<JointCheckoutFilmProps> = ({ \n\nconst CheckoutFilm = _ref => {\n  let {\n    films: {\n      film,\n      loading\n    },\n    films,\n    match,\n    // updateUserTickets,\n    history\n  } = _ref;\n  // let filmInfo = {\n  // let _id = film._id\n  // let user = film.user\n  // let title = film.title\n  // let date = film.date\n  // let cinema = film.cinema\n  // let image = film.image\n  // let ticketPrice = film.ticketPrice\n  // let crowdfundTarget = film.crowdfundTarget\n  // let totalsoFar = film.totalsoFar\n  //}\n  // const [filmData, setFilmData] = useState<filmType>({\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n  let [bookingCost, setBookingCost] = useState(0);\n  const [ticketData, setTicketData] = useState({\n    // const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  }); // const onChange = (e: FormEvent<HTMLFormElement>) => {   \n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  };\n\n  if (filmData === null) return;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Elements, {\n    stripe: stripePromise,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }\n  }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }\n  }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n    filmData: filmData,\n    ticketData: ticketData,\n    price: bookingCost // {...props}\n    // history={history}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"checkout-button btn btn-back\",\n    to: \"/film/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }\n  }, \"Go Back\"))))));\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {// updateUserTickets \n})(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.jsx"],"names":["React","useState","FormEvent","Elements","stripePromise","connect","Link","withRouter","RouteComponentProps","ticketType","filmInterface","filmType","StripeCheckoutButton","CheckoutFilm","films","film","loading","match","history","filmData","setFilmData","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","bookingCost","setBookingCost","ticketData","setTicketData","numberOfTickets","cost","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { Elements } from '@stripe/react-stripe-js';\nimport { stripePromise } from '../../utils/stripe.utils';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType } from '../componentTypes/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n// import { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css'\n\n// interface ChildComponentProps extends RouteComponentProps<any> {\n//   // history: any;\n//   match: any;\n//   location: any;\n// }\n\n// interface CheckoutFilmProps {\n//   films: filmInterface;\n//   // ticketData: ticketType \n//   // loading: boolean;\n//   };\n  \n// type JointCheckoutFilmProps = ChildComponentProps & CheckoutFilmProps;\n\n\n// interface filmTypeInterface {\n//         _id: string,\n//         user: string,\n//         title: string,\n//         date: string,\n//         cinema: string,\n//         image: string,\n//         ticketPrice: string,\n//         crowdfundTarget: number,\n//         totalsoFar: number\n//       };\n\n// const CheckoutFilm: React.FC<JointCheckoutFilmProps> = ({ \n  const CheckoutFilm = ({ \n    films: {film, loading}, \n    films,\n    match, \n    // updateUserTickets,\n    history,\n  }) => {\n\n\n  // let filmInfo = {\n    // let _id = film._id\n    // let user = film.user\n    // let title = film.title\n    // let date = film.date\n    // let cinema = film.cinema\n    // let image = film.image\n    // let ticketPrice = film.ticketPrice\n    // let crowdfundTarget = film.crowdfundTarget\n    // let totalsoFar = film.totalsoFar\n  //}\n\n\n  // const [filmData, setFilmData] = useState<filmType>({\n    const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState(0);\n\n  const [ticketData, setTicketData] = useState({\n    // const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n  // const onChange = (e: FormEvent<HTMLFormElement>) => {   \n    const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n  if(filmData === null) return; \n  return (\n      <>\n      <Elements stripe={stripePromise} >\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div className=\"form-ticket\">   \n            <input\n              type='number'\n              min='0'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n              <StripeCheckoutButton\n               filmData={filmData}\n               ticketData={ticketData}\n               price={bookingCost} \n               // {...props}\n               // history={history}\n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n          </Elements >\n        </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, { \n  // updateUserTickets \n})(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}