{"ast":null,"code":"import { ActionType } from '../actions/types';\n;\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  console.log(action); // const { type } = action;\n\n  let payload;\n\n  if (action.payload) {\n    payload = action.payload;\n  }\n\n  switch (action.type) {\n    case ActionType.USER_LOADED:\n      return { ...initialState,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case ActionType.REGISTER_SUCCESS:\n    case ActionType.LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case ActionType.UPDATE_USER:\n      return { ...state,\n        user: payload,\n        loading: false,\n        isAuthenticated: true\n      };\n\n    case ActionType.REGISTER_FAIL:\n    case ActionType.LOGIN_FAIL:\n    case ActionType.LOGOUT:\n    case ActionType.AUTH_ERROR:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/reducers/auth.tsx"],"names":["ActionType","initialState","token","localStorage","getItem","isAuthenticated","loading","user","auth","state","action","console","log","payload","type","USER_LOADED","REGISTER_SUCCESS","LOGIN_SUCCESS","setItem","UPDATE_USER","REGISTER_FAIL","LOGIN_FAIL","LOGOUT","AUTH_ERROR","removeItem"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAaC;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,IAAI,GAAG,YAIa;AAAA,MAHxBC,KAGwB,uEAHGR,YAGH;AAAA,MADxBS,MACwB;AACxBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ,EADwB,CAExB;;AACA,MAAIG,OAAJ;;AACA,MAAGH,MAAM,CAACG,OAAV,EAAmB;AACjBA,IAAAA,OAAO,GAAGH,MAAM,CAACG,OAAjB;AACD;;AAED,UAAQH,MAAM,CAACI,IAAf;AACE,SAAKd,UAAU,CAACe,WAAhB;AACA,aAAO,EACL,GAAGd,YADE;AAELI,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EAAEM;AAJD,OAAP;;AAMA,SAAKb,UAAU,CAACgB,gBAAhB;AACA,SAAKhB,UAAU,CAACiB,aAAhB;AACEd,MAAAA,YAAY,CAACe,OAAb,CAAqB,OAArB,EAA8BL,OAAO,CAACX,KAAtC;AACA,aAAO,EACP,GAAGO,KADI;AAEP,WAAGI,OAFI;AAGPR,QAAAA,eAAe,EAAE,IAHV;AAIPC,QAAAA,OAAO,EAAE;AAJF,OAAP;;AAMF,SAAKN,UAAU,CAACmB,WAAhB;AACE,aAAO,EACL,GAAGV,KADE;AAELF,QAAAA,IAAI,EAAEM,OAFD;AAGLP,QAAAA,OAAO,EAAE,KAHJ;AAIPD,QAAAA,eAAe,EAAE;AAJV,OAAP;;AAMF,SAAKL,UAAU,CAACoB,aAAhB;AACA,SAAKpB,UAAU,CAACqB,UAAhB;AACA,SAAKrB,UAAU,CAACsB,MAAhB;AACA,SAAKtB,UAAU,CAACuB,UAAhB;AACEpB,MAAAA,YAAY,CAACqB,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGf,KADE;AAELP,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMA;AACA,aAAOG,KAAP;AApCJ;AAsCC,CAlDH;;AAoDA,eAAeD,IAAf","sourcesContent":["import { ActionType } from '../actions/types';\nimport { ActionUser } from './indexTypes';\n\ninterface RepositoriesState {\n  token: string | null;\n  isAuthenticated: boolean | null;\n  loading: boolean | null;\n  user: {\n    _id: string,\n    name: string,\n    email: string,\n    tickets: string[]\n  } | null;\n};\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nconst auth = (\n  state: RepositoriesState = initialState, \n  // state: initialState, \n  action: ActionUser\n  ): RepositoriesState => {\n  console.log(action)\n  // const { type } = action;\n  let payload;  \n  if(action.payload) {\n    payload = action.payload; \n  }\n\n  switch (action.type) {\n    case ActionType.USER_LOADED:\n    return {\n      ...initialState,\n      isAuthenticated: true,\n      loading: false,\n      user: payload\n    };\n    case ActionType.REGISTER_SUCCESS:\n    case ActionType.LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n      ...state,\n      ...payload,\n      isAuthenticated: true,\n      loading: false\n    };\n    case ActionType.UPDATE_USER: \n      return {\n        ...state,\n        user: payload,\n        loading: false,\n      isAuthenticated: true,\n      };\n    case ActionType.REGISTER_FAIL:\n    case ActionType.LOGIN_FAIL:\n    case ActionType.LOGOUT:\n    case ActionType.AUTH_ERROR:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n      default:\n      return state;\n    }\n  }\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}