{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/routing/PrivateRoute.js\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n      to: \"/login\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 3\n      }\n    }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 3\n      }\n    })),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 2\n    }\n  }));\n};\n\nPrivateRoute.propTypes = {\n  auth: PropTypes.object.isRequired\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/routing/PrivateRoute.js"],"names":["React","Route","Redirect","connect","PropTypes","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","propTypes","object","isRequired","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,MAAMC,YAAY,GAAG;AAAA,MAAC;AACrBC,IAAAA,SAAS,EAAEC,SADU;AAErBC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAFe;AAGrB,OAAGC;AAHkB,GAAD;AAAA,sBAKpB,oBAAC,KAAD,oBACIA,IADJ;AAEC,IAAA,MAAM,EAAEC,KAAK,IACb,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACA,oBAAC,QAAD;AAAU,MAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,gBAGA,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KALoB;AAAA,CAArB;;AAiBAP,YAAY,CAACQ,SAAb,GAAyB;AACxBL,EAAAA,IAAI,EAAEJ,SAAS,CAACU,MAAV,CAAiBC;AADC,CAAzB;;AAIA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCT,EAAAA,IAAI,EAAES,KAAK,CAACT;AADqB,CAAL,CAA7B;;AAIA,eAAeL,OAAO,CAACa,eAAD,CAAP,CAAyBX,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nconst PrivateRoute = ({ \n\tcomponent: Component, \n\tauth: { isAuthenticated, loading }, \n\t...rest \n\t}) => (\n\t<Route \n\t{...rest} \n\t\trender={props => \n\t\t!isAuthenticated && !loading ? (  \n\t\t<Redirect to='/login' />\n\t\t) : (\n\t\t<Component {...props} />\n\t\t)\t\n\t}\n\t/>\n);\n\nPrivateRoute.propTypes = {\n\tauth: PropTypes.object.isRequired\n}\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}