{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.jsx\";\nimport React, { useState, FormEvent } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'; // import { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { createSelector } from 'reselect';\nimport { createStructuredSelector } from 'reselect';\nimport { RootState } from '../../reducers/index';\nimport { FilmInitialStateType } from '../../reducers/film'; // import { updateUserTickets } from '../../actions/auth';\n\nimport './checkoutfilm.css'; // interface CheckoutFilmProps {\n//   films: filmInterface \n//   };\n// const selectFilmReducer = (state: RootState): FilmInitialStateType => state.film.film; \n// export const selectFilmItems = createSelector(\n//   selectFilmReducer,\n//   (film) => film.film.title\n//   // (cart) => cart.cartItems\n// );\n// console.log('select ', selectFilmReducer)\n// console.log('select1 ', selectFilmItems)\n// const CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n\nconst CheckoutFilm = _ref => {\n  let {} = _ref;\n  const films = useSelector(state => state.film.film); // const film = useSelector()\n  // const {film}: {film: filmType || null} = films  \n  // const films = createSelector(\n  //   [selectFilmReducer],\n  //   (item) = item.film\n  // );  \n  // console.log('select ', selectFilmItems)\n\n  console.log('select ', films); // const { film, loading } = films\n  // console.log('select ', film)\n  // console.log('state ', film)\n  // const [filmData, setFilmData] = useState<filmType>({\n  //   _id: film._id,\n  //   user: film.user,\n  //   title: film.title,\n  //   date: film.date,\n  //   cinema: film.cinema,\n  //   image: film.image,\n  //   ticketPrice: film.ticketPrice,\n  //   crowdfundTarget: film.crowdfundTarget,\n  //   totalsoFar: film.totalsoFar\n  // });\n  // let [bookingCost, setBookingCost] = useState<number>(0);\n  // const [ticketData, setTicketData] = useState<ticketType>({\n  //   title: film.title,\n  //   ticketPrice: film.ticketPrice,\n  //   date: film.date,\n  //   cinema: film.cinema,\n  //   crowdfundTarget: film.crowdfundTarget,\n  //   totalsoFar: film.totalsoFar,\n  //   numberOfTickets: 0,\n  //   cost: 0\n  // });\n  //   const onChange = (e) => {   \n  //   let ticketsTotal = parseInt(e.target.value);\n  //   let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n  //   let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n  //   setBookingCost(bookingTotal)\n  //   setTotalSoFar(totalTicketsBooked);\n  //   setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  // }\n  // const setTotalSoFar = (totalTicketsBooked) => {\n  //   setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  // }\n  // const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n  //   setTicketData({...ticketData, \n  //    totalsoFar: totalTicketsBooked, \n  //    cost: bookingTotal,\n  //    numberOfTickets: ticketsTotal });\n  // } \n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }, \"Film\")) //     <>\n  //     <div className='checkout-page'>\n  //         <div>\n  //           <span>Film: {film.title}</span>\n  //         </div>\n  //         <div>\n  //           <span>Date: {film.date} </span>\n  //         </div>\n  //         <div className='header-block'>\n  //           <span>Price: £{film.ticketPrice} </span>\n  //         </div>\n  //         <div className='header-block'>\n  //           <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n  //         </div>\n  //         <div \n  //         className='header-block'>\n  //           <span>Tickets sold: {film.totalsoFar}</span>\n  //         </div>\n  //       <form className=\"form\">\n  //         <div className=\"form-ticket\">   \n  //           <input\n  //             type='number'\n  //             min='0'\n  //             placeholder='Enter number of tickets'\n  //             name='tickets'\n  //             onChange={e => onChange(e)}\n  //             required\n  //           />\n  //         </div>  \n  //       </form>\n  //         <div>\n  //           <span>Basket total: £{\n  //             isNaN(bookingCost) ? 0 \n  //             : bookingCost}\n  //           </span>\n  //         </div>\n  //         <div>\n  //           <span> \n  //             <StripeCheckoutButton\n  //              // filmData={filmData}\n  //              // ticketData={ticketData}\n  //              price={bookingCost} \n  //              />\n  //           </span>\n  //           <div>\n  //           <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n  //           </Link>\n  //           </div>\n  //         </div>\n  //         </div>\n  //       </>\n  ;\n};\n\nconst mapStateToProps = state => ({\n  films: state.film // films: selectFilmReducer\n\n}); // const mapStateToProps = createStructuredSelector({\n//   films: selectFilmReducer\n// });\n// export default connect(mapStateToProps)(CheckoutFilm); \n\n\nexport default CheckoutFilm; // updateUserTickets \n// })(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.jsx"],"names":["React","useState","FormEvent","connect","useSelector","Link","withRouter","RouteComponentProps","StripeCheckoutButton","createSelector","createStructuredSelector","RootState","FilmInitialStateType","CheckoutFilm","films","state","film","console","log","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,mBAA3B,QAAsD,kBAAtD,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC,C,CACA;;AACA,OAAO,oBAAP,C,CAEA;AACA;AACA;AAGA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACE,MAAMC,YAAY,GAAG,QAGf;AAAA,MAHgB,EAGhB;AAEN,QAAMC,KAAK,GAAGV,WAAW,CAAEW,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWA,IAAvB,CAAzB,CAFM,CAGN;AACA;AAEA;AACA;AACA;AACA;AACA;;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBJ,KAAvB,EAXM,CAYN;AACF;AAGE;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,sBACU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADA,CADV,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvDA;AAyDD,CA5HC;;AA8HF,MAAMK,eAAe,GAAGJ,KAAK,KAAK;AAChCD,EAAAA,KAAK,EAAEC,KAAK,CAACC,IADmB,CAEhC;;AAFgC,CAAL,CAA7B,C,CAKA;AACA;AACA;AAIA;;;AACA,eAAeH,YAAf,C,CACE;AACF","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\n// import { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { createSelector } from 'reselect';\nimport { createStructuredSelector } from 'reselect';\nimport { RootState } from '../../reducers/index';\nimport { FilmInitialStateType } from '../../reducers/film';\n// import { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css'\n\n// interface CheckoutFilmProps {\n//   films: filmInterface \n//   };\n  \n\n// const selectFilmReducer = (state: RootState): FilmInitialStateType => state.film.film; \n\n// export const selectFilmItems = createSelector(\n//   selectFilmReducer,\n//   (film) => film.film.title\n//   // (cart) => cart.cartItems\n// );\n// console.log('select ', selectFilmReducer)\n// console.log('select1 ', selectFilmItems)\n// const CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n  const CheckoutFilm = ({ \n    // films,\n    // films: {film, loading}, \n  }) => {\n\n  const films = useSelector((state) => state.film.film)\n  // const film = useSelector()\n  // const {film}: {film: filmType || null} = films  \n  \n  // const films = createSelector(\n  //   [selectFilmReducer],\n  //   (item) = item.film\n  // );  \n  // console.log('select ', selectFilmItems)\n  console.log('select ', films)\n  // const { film, loading } = films\n// console.log('select ', film)\n  \n\n  // console.log('state ', film)\n  \n\n  // const [filmData, setFilmData] = useState<filmType>({\n  //   _id: film._id,\n  //   user: film.user,\n  //   title: film.title,\n  //   date: film.date,\n  //   cinema: film.cinema,\n  //   image: film.image,\n  //   ticketPrice: film.ticketPrice,\n  //   crowdfundTarget: film.crowdfundTarget,\n  //   totalsoFar: film.totalsoFar\n  // });\n\n  // let [bookingCost, setBookingCost] = useState<number>(0);\n\n  // const [ticketData, setTicketData] = useState<ticketType>({\n  //   title: film.title,\n  //   ticketPrice: film.ticketPrice,\n  //   date: film.date,\n  //   cinema: film.cinema,\n  //   crowdfundTarget: film.crowdfundTarget,\n  //   totalsoFar: film.totalsoFar,\n  //   numberOfTickets: 0,\n  //   cost: 0\n  // });\n    \n  //   const onChange = (e) => {   \n  //   let ticketsTotal = parseInt(e.target.value);\n  //   let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n  //   let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n  //   setBookingCost(bookingTotal)\n  //   setTotalSoFar(totalTicketsBooked);\n  //   setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  // }\n\n  // const setTotalSoFar = (totalTicketsBooked) => {\n  //   setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  // }\n\n  // const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n  //   setTicketData({...ticketData, \n  //    totalsoFar: totalTicketsBooked, \n  //    cost: bookingTotal,\n  //    numberOfTickets: ticketsTotal });\n  // } \n \n  return (\n            <div>\n            <span>Film</span>\n          </div>\n  //     <>\n  //     <div className='checkout-page'>\n  //         <div>\n  //           <span>Film: {film.title}</span>\n  //         </div>\n  //         <div>\n  //           <span>Date: {film.date} </span>\n  //         </div>\n  //         <div className='header-block'>\n  //           <span>Price: £{film.ticketPrice} </span>\n  //         </div>\n  //         <div className='header-block'>\n  //           <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n  //         </div>\n  //         <div \n  //         className='header-block'>\n  //           <span>Tickets sold: {film.totalsoFar}</span>\n  //         </div>\n        \n  //       <form className=\"form\">\n  //         <div className=\"form-ticket\">   \n  //           <input\n  //             type='number'\n  //             min='0'\n  //             placeholder='Enter number of tickets'\n  //             name='tickets'\n  //             onChange={e => onChange(e)}\n  //             required\n  //           />\n  //         </div>  \n  //       </form>\n  //         <div>\n  //           <span>Basket total: £{\n  //             isNaN(bookingCost) ? 0 \n  //             : bookingCost}\n  //           </span>\n  //         </div>\n  //         <div>\n  //           <span> \n  //             <StripeCheckoutButton\n  //              // filmData={filmData}\n  //              // ticketData={ticketData}\n  //              price={bookingCost} \n  //              />\n  //           </span>\n  //           <div>\n  //           <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n  //           </Link>\n  //           </div>\n  //         </div>\n  //         </div>\n  //       </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  films: state.film\n  // films: selectFilmReducer\n});\n\n// const mapStateToProps = createStructuredSelector({\n//   films: selectFilmReducer\n// });\n\n\n\n// export default connect(mapStateToProps)(CheckoutFilm); \nexport default CheckoutFilm; \n  // updateUserTickets \n// })(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}