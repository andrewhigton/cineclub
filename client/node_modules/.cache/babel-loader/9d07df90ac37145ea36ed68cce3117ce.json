{"ast":null,"code":"'use strict';\n\nvar StripeResource = require('../StripeResource');\n\nvar stripeMethod = StripeResource.method;\n/**\n * CustomerSubscription is a unique resource in that, upon instantiation,\n * requires a customerId, and therefore each of its methods only\n * require the subscriptionId argument.\n *\n * This streamlines the API specifically for the case of accessing cards\n * on a returned customer object.\n *\n * E.g. customerObject.cards.retrieve(cardId)\n * (As opposed to the also-supported stripe.customers.retrieveCard(custId, cardId))\n */\n\nmodule.exports = StripeResource.extend({\n  path: 'customers/{customerId}/subscriptions',\n  includeBasic: ['create', 'list', 'retrieve', 'update', 'del'],\n\n  /**\n   * Customer: Discount methods\n   */\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{subscriptionId}/discount',\n    urlParams: ['customerId', 'subscriptionId']\n  })\n});","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/node_modules/stripe/lib/resources/CustomerSubscriptions.js"],"names":["StripeResource","require","stripeMethod","method","module","exports","extend","path","includeBasic","deleteDiscount","urlParams"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA5B;;AACA,IAAIC,YAAY,GAAGF,cAAc,CAACG,MAAlC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACAC,MAAM,CAACC,OAAP,GAAiBL,cAAc,CAACM,MAAf,CAAsB;AACrCC,EAAAA,IAAI,EAAE,sCAD+B;AAErCC,EAAAA,YAAY,EAAE,CAAC,QAAD,EAAW,MAAX,EAAmB,UAAnB,EAA+B,QAA/B,EAAyC,KAAzC,CAFuB;;AAIrC;AACF;AACA;AAEEC,EAAAA,cAAc,EAAEP,YAAY,CAAC;AAC3BC,IAAAA,MAAM,EAAE,QADmB;AAE3BI,IAAAA,IAAI,EAAE,4BAFqB;AAG3BG,IAAAA,SAAS,EAAE,CAAC,YAAD,EAAe,gBAAf;AAHgB,GAAD;AARS,CAAtB,CAAjB","sourcesContent":["'use strict';\n\nvar StripeResource = require('../StripeResource');\nvar stripeMethod = StripeResource.method;\n\n/**\n * CustomerSubscription is a unique resource in that, upon instantiation,\n * requires a customerId, and therefore each of its methods only\n * require the subscriptionId argument.\n *\n * This streamlines the API specifically for the case of accessing cards\n * on a returned customer object.\n *\n * E.g. customerObject.cards.retrieve(cardId)\n * (As opposed to the also-supported stripe.customers.retrieveCard(custId, cardId))\n */\nmodule.exports = StripeResource.extend({\n  path: 'customers/{customerId}/subscriptions',\n  includeBasic: ['create', 'list', 'retrieve', 'update', 'del'],\n\n  /**\n   * Customer: Discount methods\n   */\n\n  deleteDiscount: stripeMethod({\n    method: 'DELETE',\n    path: '/{subscriptionId}/discount',\n    urlParams: ['customerId', 'subscriptionId'],\n  }),\n});\n"]},"metadata":{},"sourceType":"script"}