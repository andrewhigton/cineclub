{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/routing/PrivateRoute.tsx\";\nimport React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux'; // interface ChildComponentProps extends RouteComponentProps<any> {\n// \tcomponent: React.ReactNode;\n// \tComponent: React.ReactNode;\n// }\n\n// type JointRouteProps = ChildComponentProps & RouteProps;\nconst PrivateRoute = _ref => {\n  let {\n    component: Component,\n    auth: {\n      isAuthenticated,\n      loading\n    },\n    ...rest\n  } = _ref;\n  return (\n    /*#__PURE__*/\n    // console.log(component)\n    React.createElement(Route, Object.assign({}, rest, {\n      render: props => !isAuthenticated && !loading ? /*#__PURE__*/React.createElement(Redirect, {\n        to: \"/login\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 3\n        }\n      }) : /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 3\n        }\n      })),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 2\n      }\n    }))\n  );\n};\n\nconst mapStateToProps = state => ({\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/routing/PrivateRoute.tsx"],"names":["React","Route","Redirect","connect","PrivateRoute","component","Component","auth","isAuthenticated","loading","rest","props","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAqD,kBAArD;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;AACA;;AAWA;AAIA,MAAMC,YAAkC,GAAG;AAAA,MAAC;AAC3CC,IAAAA,SAAS,EAAEC,SADgC;AAE3CC,IAAAA,IAAI,EAAE;AAAEC,MAAAA,eAAF;AAAmBC,MAAAA;AAAnB,KAFqC;AAG3C,OAAGC;AAHwC,GAAD;AAAA;AAAA;AAK1C;AACA,wBAAC,KAAD,oBACIA,IADJ;AAEC,MAAA,MAAM,EAAEC,KAAK,IACb,CAACH,eAAD,IAAoB,CAACC,OAArB,gBACA,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,gBAGA,oBAAC,SAAD,oBAAeE,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAND;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAN0C;AAAA,CAA3C;;AAkBA,MAAMC,eAAe,GAAGC,KAAK,KAAK;AACjCN,EAAAA,IAAI,EAAEM,KAAK,CAACN;AADqB,CAAL,CAA7B;;AAIA,eAAeJ,OAAO,CAACS,eAAD,CAAP,CAAyBR,YAAzB,CAAf","sourcesContent":["import React from 'react';\nimport { Route, Redirect, RouteComponentProps } from 'react-router-dom'\nimport { connect } from 'react-redux';\n\n// interface ChildComponentProps extends RouteComponentProps<any> {\n// \tcomponent: React.ReactNode;\n// \tComponent: React.ReactNode;\n// }\n\ninterface RouteProps {\n\tauth: {\n\t\tisAuthenticated: boolean,\n\t\tloading: boolean,\n\t}\n\t// component: React.ReactNode;\n\tComponent: React.ComponentType<any>;\n}\n\n// type JointRouteProps = ChildComponentProps & RouteProps;\n\n\n\nconst PrivateRoute: React.FC<RouteProps> = ({ \n\tcomponent: Component, \n\tauth: { isAuthenticated, loading }, \n\t...rest \n\t}) => (\n\t// console.log(component)\n\t<Route \n\t{...rest} \n\t\trender={props => \n\t\t!isAuthenticated && !loading ? (  \n\t\t<Redirect to='/login' />\n\t\t) : (\n\t\t<Component {...props} />\n\t\t)\t\n\t}\n\t/>\n);\n\nconst mapStateToProps = state => ({\n\tauth: state.auth\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);"]},"metadata":{},"sourceType":"module"}