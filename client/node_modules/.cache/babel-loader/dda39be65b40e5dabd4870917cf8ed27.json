{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/stripe-button/stripe-button.tsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { updateFilm } from '../../actions/film';\nimport { updateUserTickets } from '../../actions/auth';\nimport axios from 'axios';\n\nconst StripeCheckoutButton = _ref => {\n  let {\n    price,\n    filmData,\n    ticketData,\n    updateFilm,\n    updateUserTickets,\n    history,\n    location\n  } = _ref;\n  // console.log(price)\n  // console.log(filmData)\n  // console.log(ticketData)\n  const priceForStripe = price * 100;\n  const publishableKey = 'pk_test_GxoLwpaJRAn1kdTQGlL8EwZa00qqtVHbM3';\n\n  const onToken = token => {\n    if (priceForStripe === '' || priceForStripe < 1) {\n      alert('Please add tickets before submitting');\n      return;\n    }\n\n    axios({\n      url: '/api/film/payment',\n      method: 'post',\n      data: {\n        amount: priceForStripe,\n        token\n      }\n    }, onPayment()).then(response => {\n      alert('Payment succesful. We have sent your tickets to your email address and will notify when the film has been booked');\n      window.location.replace('http://localhost:3000/film/dashboard');\n    }).catch(error => {\n      console.log('Payment error: ', JSON.parse(error));\n      alert('Payment error. Please use the provided credit card details');\n    });\n  };\n\n  const onPayment = () => {\n    updateFilm(filmData, history);\n    updateUserTickets(ticketData, history);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"how-it-works\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckout, {\n    label: \"Pay now\",\n    name: \"Saturday Cinema Club\",\n    billingAddress: true,\n    shippingAddress: true,\n    description: `Your total is £${price}`,\n    amount: priceForStripe,\n    panelLabel: \"Pay now\",\n    token: onToken,\n    stripeKey: publishableKey,\n    style: {\n      'margin': '2vh 0vh 0vw -5vw'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 3\n    }\n  }));\n};\n\nconst mapStateToProps = state => ({\n  film: state.film,\n  auth: state.auth\n});\n\nexport default connect(mapStateToProps, {\n  updateFilm,\n  updateUserTickets\n})(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/stripe-button/stripe-button.tsx"],"names":["React","connect","StripeCheckout","updateFilm","updateUserTickets","axios","StripeCheckoutButton","price","filmData","ticketData","history","location","priceForStripe","publishableKey","onToken","token","alert","url","method","data","amount","onPayment","then","response","window","replace","catch","error","console","log","JSON","parse","mapStateToProps","state","film","auth"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,cAAP,MAA2B,uBAA3B;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,SAASC,iBAAT,QAAkC,oBAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAuCA,MAAMC,oBAAgD,GAAG,QAQlD;AAAA,MARmD;AACxDC,IAAAA,KADwD;AAExDC,IAAAA,QAFwD;AAGxDC,IAAAA,UAHwD;AAIxDN,IAAAA,UAJwD;AAKvDC,IAAAA,iBALuD;AAMxDM,IAAAA,OANwD;AAOxDC,IAAAA;AAPwD,GAQnD;AAEN;AACA;AACA;AAEA,QAAMC,cAAc,GAAGL,KAAK,GAAG,GAA/B;AACE,QAAMM,cAAc,GAAG,4CAAvB;;AAEA,QAAMC,OAAO,GAAGC,KAAK,IAAI;AACzB,QAAGH,cAAc,KAAK,EAAnB,IAAyBA,cAAc,GAAG,CAA7C,EAAgD;AAC/CI,MAAAA,KAAK,CAAC,sCAAD,CAAL;AACA;AACA;;AACDX,IAAAA,KAAK,CAAC;AACLY,MAAAA,GAAG,EAAE,mBADA;AAELC,MAAAA,MAAM,EAAE,MAFH;AAGLC,MAAAA,IAAI,EAAE;AACLC,QAAAA,MAAM,EAAER,cADH;AAELG,QAAAA;AAFK;AAHD,KAAD,EAODM,SAAS,EAPR,CAAL,CAQCC,IARD,CAQMC,QAAQ,IAAI;AAChBP,MAAAA,KAAK,CAAC,kHAAD,CAAL;AACAQ,MAAAA,MAAM,CAACb,QAAP,CAAgBc,OAAhB,CAAwB,sCAAxB;AACA,KAXF,EAYCC,KAZD,CAYOC,KAAK,IAAI;AACfC,MAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAA/B;AACCX,MAAAA,KAAK,CAAC,4DAAD,CAAL;AACA,KAfF;AAgBD,GArBC;;AAuBA,QAAMK,SAAS,GAAG,MAAM;AACtBlB,IAAAA,UAAU,CAACK,QAAD,EAAWE,OAAX,CAAV;AACAN,IAAAA,iBAAiB,CAACK,UAAD,EAAaC,OAAb,CAAjB;AACD,GAHD;;AAKF,sBACC;AACA,IAAA,SAAS,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEA,oBAAC,cAAD;AACA,IAAA,KAAK,EAAC,SADN;AAEA,IAAA,IAAI,EAAC,sBAFL;AAGA,IAAA,cAAc,MAHd;AAIA,IAAA,eAAe,MAJf;AAKA,IAAA,WAAW,EAAG,kBAAiBH,KAAM,EALrC;AAMA,IAAA,MAAM,EAAEK,cANR;AAOA,IAAA,UAAU,EAAC,SAPX;AAQA,IAAA,KAAK,EAAEE,OARP;AASA,IAAA,SAAS,EAAED,cATX;AAUA,IAAA,KAAK,EAAE;AAAC,gBAAS;AAAV,KAVP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CADD;AAiBC,CA9DF;;AAgEA,MAAMmB,eAAe,GAAGC,KAAK,KAAK;AAChCC,EAAAA,IAAI,EAAED,KAAK,CAACC,IADoB;AAEhCC,EAAAA,IAAI,EAAEF,KAAK,CAACE;AAFoB,CAAL,CAA7B;;AAKA,eAAelC,OAAO,CACpB+B,eADoB,EACH;AACjB7B,EAAAA,UADiB;AAEjBC,EAAAA;AAFiB,CADG,CAAP,CAIZE,oBAJY,CAAf","sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport StripeCheckout from 'react-stripe-checkout';\nimport { updateFilm } from '../../actions/film';\nimport { updateUserTickets } from '../../actions/auth';\nimport axios from 'axios';\n\ninterface ChildComponentProps extends RouteComponentProps<any> {\n  history: any;\n  location: any;\n}\n\ninterface StripeProps {\n\t\tprops: {\n\t\tprice: number; \n\t\tfilmData: {\n\t\t\t\tcinema: string,\n\t\t\t\tcrowdfundTarget: number,\n\t\t\t\tdate: string,\n\t\t\t\timage: string,\n\t\t\t\tticketPrice: string,\n\t\t\t\ttitle: string,\n\t\t\t\ttotalsoFar: number,\n\t\t\t\tuser: string,\n\t\t\t\t_id: string,\n\t\t};\n\t\tticketData: {\n\t\t\t\tcinema: string,\n\t\t\t\tcost: number,\n\t\t\t\tcrowdfundTarget: number,\n\t\t\t\tdate: string,\n\t\t\t\tnumberOfTickets: number,\n\t\t\t\tticketPrice: string,\n\t\t\t\ttitle: string,\n\t\t\t\ttotalsoFar: number,\n\t\t}; \n\t\tupdateFilm: (filmData, history) => void; \n\t  updateUserTickets: (ticketData, history) => void;\n\t  style: React.CSSProperties;\n\t} \n}\n\ntype JointStripeProps = ChildComponentProps & StripeProps; \n\nconst StripeCheckoutButton: React.FC<JointStripeProps> = ({ \n\t\tprice, \n\t\tfilmData, \n\t\tticketData, \n\t\tupdateFilm, \n\t  updateUserTickets,\n\t\thistory, \n\t\tlocation \n\t}) => {\n\n\t// console.log(price)\n\t// console.log(filmData)\n\t// console.log(ticketData)\n\n\tconst priceForStripe = price * 100;\n\t\t\tconst publishableKey = 'pk_test_GxoLwpaJRAn1kdTQGlL8EwZa00qqtVHbM3';\n\t\t\t\n\t\t\tconst onToken = token => {\n\t\t\tif(priceForStripe === '' || priceForStripe < 1) {\n\t\t\t\talert('Please add tickets before submitting');\t\n\t\t\t\treturn; \n\t\t\t}\n\t\t\taxios({ \n\t\t\t\turl: '/api/film/payment', \n\t\t\t\tmethod: 'post',\n\t\t\t\tdata: {\n\t\t\t\t\tamount: priceForStripe,\n\t\t\t\t\ttoken\n\t\t\t\t}\n\t\t\t }, onPayment())\n\t\t\t.then(response => {\n\t\t\t \talert('Payment succesful. We have sent your tickets to your email address and will notify when the film has been booked');\t\n\t\t\t \twindow.location.replace('http://localhost:3000/film/dashboard');\n\t\t\t })\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log('Payment error: ', JSON.parse(error)); \t\n\t\t\t \talert('Payment error. Please use the provided credit card details');\t\n\t\t\t }) \n\t} \n\n  \tconst onPayment = () => {\n\t    updateFilm(filmData, history);\n\t    updateUserTickets(ticketData, history);\n  \t};\n\n\treturn (\n\t\t<div \n\t\tclassName='how-it-works'>\n\t\t<StripeCheckout\n\t\tlabel='Pay now'\n\t\tname='Saturday Cinema Club'\n\t\tbillingAddress\n\t\tshippingAddress\n\t\tdescription={`Your total is £${price}`}\n\t\tamount={priceForStripe}\n\t\tpanelLabel='Pay now'\n\t\ttoken={onToken}\n\t\tstripeKey={publishableKey}\n\t\tstyle={{'margin':'2vh 0vh 0vw -5vw'}}\n\t\t/>\n\t\t</div>\n\t\t)\n\t}\n\nconst mapStateToProps = state => ({\n  film: state.film,\n  auth: state.auth\n});\n\nexport default connect(\n  mapStateToProps, { \n  updateFilm, \n  updateUserTickets \n})(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}