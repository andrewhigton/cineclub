{"ast":null,"code":"import _regeneratorRuntime from\"/Users/andrewhigton/Documents/code/typescript/cineclub/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/andrewhigton/Documents/code/typescript/cineclub/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import axios from'axios';import{ActionType}from'./types';// Get all Films\nexport var loadFilms=function loadFilms(){return/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return axios.get('/api/film');case 3:res=_context.sent;dispatch({type:ActionType.GET_FILMS,payload:res.data});_context.next=10;break;case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);dispatch({type:ActionType.FILM_ERROR,payload:null});case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function(_x){return _ref.apply(this,arguments);};}();};// Get film by ID\nexport var getFilmById=function getFilmById(film_id){return/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch){var res;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:dispatch({type:ActionType.CLEAR_FILM,payload:null});_context2.prev=1;_context2.next=4;return axios.get(\"/api/film/\".concat(film_id));case 4:res=_context2.sent;dispatch({type:ActionType.GET_FILM,payload:res.data});_context2.next=11;break;case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);dispatch({type:ActionType.FILM_ERROR,payload:null});case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function(_x2){return _ref2.apply(this,arguments);};}();};// create film\nexport var createFilm=function createFilm(formData,history){return/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch){var config,res;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.prev=0;config={headers:{'Content-Type':'application/json'}};_context3.next=4;return axios.post('/api/film/create-film',formData,config);case 4:res=_context3.sent;dispatch({type:ActionType.GET_FILM,payload:res.data});history.push('/film/dashboard');_context3.next=13;break;case 9:_context3.prev=9;_context3.t0=_context3[\"catch\"](0);if(_context3.t0){alert(_context3.t0);}dispatch({type:ActionType.FILM_ERROR,payload:null});case 13:case\"end\":return _context3.stop();}}},_callee3,null,[[0,9]]);}));return function(_x3){return _ref3.apply(this,arguments);};}();};export var updateFilm=function updateFilm(formData){return/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch){var config,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:dispatch({type:ActionType.CLEAR_FILM,payload:null});_context4.prev=1;config={headers:{'Content-Type':'application/json'}};_context4.next=5;return axios.put('/api/film/booking',formData,config);case 5:res=_context4.sent;dispatch({type:ActionType.UPDATE_FILM,payload:res.data});alert('Thanks for your booking');_context4.next=14;break;case 10:_context4.prev=10;_context4.t0=_context4[\"catch\"](1);if(_context4.t0){alert(_context4.t0);}dispatch({type:ActionType.FILM_ERROR,payload:null});case 14:;case 15:case\"end\":return _context4.stop();}}},_callee4,null,[[1,10]]);}));return function(_x4){return _ref4.apply(this,arguments);};}();};// export const deleteFilm = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`/api/profile/tickets/${id}`);\n//     dispatch({\n//       type: 'DELETE_FILM',\n//       payload: res.data\n//     });\n//     alert('Tickets Removed', 'success');\n//   } catch (err) {\n//     dispatch({\n//       type: 'FILM_ERROR',\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/actions/film.tsx"],"names":["axios","ActionType","loadFilms","dispatch","get","res","type","GET_FILMS","payload","data","FILM_ERROR","getFilmById","film_id","CLEAR_FILM","GET_FILM","createFilm","formData","history","config","headers","post","push","alert","updateFilm","put","UPDATE_FILM"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport { ActionType } from './types';\nimport { ActionFilms } from '../reducers/indexTypes';\nimport { Dispatch } from 'redux';\n\n// Get all Films\nexport const loadFilms = () => async (dispatch: Dispatch<ActionFilms>) => {\n  try {\n    const res = await axios.get('/api/film');\n    dispatch({\n      type: ActionType.GET_FILMS,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ActionType.FILM_ERROR,\n      payload: null,\n    });\n  }\n  };\n\n// Get film by ID\nexport const getFilmById = (film_id: number) => async (dispatch: Dispatch<ActionFilms>) => \n{\n  dispatch({ \n    type: ActionType.CLEAR_FILM,\n    payload: null,\n   });\n  try {\n    const res = await axios.get(`/api/film/${film_id}`)\n\n    \n    dispatch({\n      type: ActionType.GET_FILM,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: ActionType.FILM_ERROR,\n      payload: null\n    });\n  }\n};\n\n// create film\nexport const createFilm = ( formData: string, history ) => async dispatch => {\n\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n  \n    const res = await axios.post('/api/film/create-film', formData, config);    \n    dispatch({\n      type: ActionType.GET_FILM,\n      payload: res.data\n    });\n    history.push('/film/dashboard');\n  } catch (err) {\n\n    if (err) {\n      alert(err)\n    }\n\n    dispatch({\n      type: ActionType.FILM_ERROR,\n      payload: null\n    });\n  }\n};\n\nexport const updateFilm = (formData) => async (dispatch: Dispatch<ActionFilms>) => {\n\n  dispatch({ \n    type: ActionType.CLEAR_FILM,\n    payload: null,\n     });\n  try {\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n\n   \n    const res = await axios.put('/api/film/booking', formData, config);\n    dispatch({\n      type: ActionType.UPDATE_FILM,\n      payload: res.data\n      });\n    alert('Thanks for your booking');\n  } catch (err) {\n   \n    if (err) {\n      alert(err)\n    }\n\n\n    dispatch({\n      type: ActionType.FILM_ERROR,\n      payload: null\n \n    });\n  };\n}\n\n// export const deleteFilm = id => async dispatch => {\n//   try {\n//     const res = await axios.delete(`/api/profile/tickets/${id}`);\n\n//     dispatch({\n//       type: 'DELETE_FILM',\n//       payload: res.data\n//     });\n\n//     alert('Tickets Removed', 'success');\n//   } catch (err) {\n//     dispatch({\n//       type: 'FILM_ERROR',\n//       payload: { msg: err.response.statusText, status: err.response.status }\n//     });\n//   }\n// };"]},"metadata":{},"sourceType":"module"}