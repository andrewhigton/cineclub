{"ast":null,"code":"import { ActionType } from '../actions/types';\n;\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nconst auth = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  // console.log(state)\n  const {\n    type\n  } = action;\n  let payload;\n\n  if (action.payload) {\n    payload = action.payload;\n  }\n\n  switch (action.type) {\n    case ActionType.USER_LOADED:\n      return { ...initialState,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n\n    case ActionType.REGISTER_SUCCESS:\n    case ActionType.LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return { ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n\n    case ActionType.UPDATE_USER:\n      return { ...state,\n        user: payload,\n        loading: false,\n        isAuthenticated: true\n      };\n\n    case ActionType.AUTH_ERROR:\n    case ActionType.LOGIN_FAIL:\n    case ActionType.LOGOUT:\n    case ActionType.REGISTER_FAIL:\n      // case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return { ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default auth;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/reducers/auth.tsx"],"names":["ActionType","initialState","token","localStorage","getItem","isAuthenticated","loading","user","auth","state","action","type","payload","USER_LOADED","REGISTER_SUCCESS","LOGIN_SUCCESS","setItem","UPDATE_USER","AUTH_ERROR","LOGIN_FAIL","LOGOUT","REGISTER_FAIL","removeItem"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AAaC;AAED,MAAMC,YAAY,GAAG;AACnBC,EAAAA,KAAK,EAAEC,YAAY,CAACC,OAAb,CAAqB,OAArB,CADY;AAEnBC,EAAAA,eAAe,EAAE,IAFE;AAGnBC,EAAAA,OAAO,EAAE,IAHU;AAInBC,EAAAA,IAAI,EAAE;AAJa,CAArB;;AAOA,MAAMC,IAAI,GAAG,YAIa;AAAA,MAHxBC,KAGwB,uEAHGR,YAGH;AAAA,MADxBS,MACwB;AAExB;AACA,QAAM;AAAEC,IAAAA;AAAF,MAAWD,MAAjB;AACA,MAAIE,OAAJ;;AACA,MAAGF,MAAM,CAACE,OAAV,EAAmB;AACjBA,IAAAA,OAAO,GAAGF,MAAM,CAACE,OAAjB;AACD;;AAED,UAAQF,MAAM,CAACC,IAAf;AACE,SAAKX,UAAU,CAACa,WAAhB;AACA,aAAO,EACL,GAAGZ,YADE;AAELI,QAAAA,eAAe,EAAE,IAFZ;AAGLC,QAAAA,OAAO,EAAE,KAHJ;AAILC,QAAAA,IAAI,EAAEK;AAJD,OAAP;;AAMA,SAAKZ,UAAU,CAACc,gBAAhB;AACA,SAAKd,UAAU,CAACe,aAAhB;AACEZ,MAAAA,YAAY,CAACa,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAACV,KAAtC;AACA,aAAO,EACP,GAAGO,KADI;AAEP,WAAGG,OAFI;AAGPP,QAAAA,eAAe,EAAE,IAHV;AAIPC,QAAAA,OAAO,EAAE;AAJF,OAAP;;AAMF,SAAKN,UAAU,CAACiB,WAAhB;AACE,aAAO,EACL,GAAGR,KADE;AAELF,QAAAA,IAAI,EAAEK,OAFD;AAGLN,QAAAA,OAAO,EAAE,KAHJ;AAIPD,QAAAA,eAAe,EAAE;AAJV,OAAP;;AAQF,SAAKL,UAAU,CAACkB,UAAhB;AACA,SAAKlB,UAAU,CAACmB,UAAhB;AACA,SAAKnB,UAAU,CAACoB,MAAhB;AACA,SAAKpB,UAAU,CAACqB,aAAhB;AACA;AACElB,MAAAA,YAAY,CAACmB,UAAb,CAAwB,OAAxB;AACA,aAAO,EACL,GAAGb,KADE;AAELP,QAAAA,KAAK,EAAE,IAFF;AAGLG,QAAAA,eAAe,EAAE,KAHZ;AAILC,QAAAA,OAAO,EAAE;AAJJ,OAAP;;AAMA;AACA,aAAOG,KAAP;AAvCJ;AAyCC,CAtDH;;AAwDA,eAAeD,IAAf","sourcesContent":["import { ActionType } from '../actions/types';\nimport { ActionUser } from './indexTypes';\n\ninterface RepositoriesState {\n  token: string | null;\n  isAuthenticated: boolean | null;\n  loading: boolean | null;\n  user: {\n    _id: string,\n    name: string,\n    email: string,\n    tickets: string[]\n  } | null;\n};\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nconst auth = (\n  state: RepositoriesState = initialState, \n  // state: initialState, \n  action: ActionUser\n  ): RepositoriesState => {\n  \n  // console.log(state)\n  const { type } = action;\n  let payload;  \n  if(action.payload) {\n    payload = action.payload; \n  }\n\n  switch (action.type) {\n    case ActionType.USER_LOADED:\n    return {\n      ...initialState,\n      isAuthenticated: true,\n      loading: false,\n      user: payload\n    };\n    case ActionType.REGISTER_SUCCESS:\n    case ActionType.LOGIN_SUCCESS:\n      localStorage.setItem('token', payload.token);\n      return {\n      ...state,\n      ...payload,\n      isAuthenticated: true,\n      loading: false\n    };\n    case ActionType.UPDATE_USER: \n      return {\n        ...state,\n        user: payload,\n        loading: false,\n      isAuthenticated: true,\n      };\n    \n    \n    case ActionType.AUTH_ERROR:\n    case ActionType.LOGIN_FAIL:\n    case ActionType.LOGOUT:\n    case ActionType.REGISTER_FAIL:\n    // case ACCOUNT_DELETED:\n      localStorage.removeItem('token');\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false\n      };\n      default:\n      return state;\n    }\n  }\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}