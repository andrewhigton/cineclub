{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/carousel/Carousel.tsx\";\nimport React, { useState } from 'react';\nimport { Carousel, CarouselControl, CarouselIndicators } from 'reactstrap';\nimport './carousel.css'; // const items: {src: string, altText: string, caption: string, location: string}[] = [\n\nconst items = [{\n  src: 'mood.jpg',\n  altText: 'In The Mood For Love',\n  caption: 'In The Mood For Love',\n  location: 'Picturehouse Liverpool, May 20 2021'\n}, {\n  src: 'br2049.jpeg',\n  altText: 'Blade Runner 2049',\n  caption: 'Blade Runner 2049',\n  location: 'Curzon Bloomsbury London, Dec 5 2020'\n}, {\n  src: 'spinal.jpeg',\n  altText: 'Spinal Tap',\n  caption: 'Spinal Tap',\n  location: 'Genesis Cinema, London, Jan 2 2021'\n} // {\n//   src: 'thinred.png',\n//   altText: 'The Thin Red Line',\n//   caption: 'The Thin Red Line',\n//   location: 'Chester Storyhouse , Nov 4 2020'\n// },\n//   {\n//   src: 'odyssey.jpeg',\n//   altText: '2001: A Space Odyssey',\n//   caption: '2001: A Space Odyssey',\n//   location: 'Picturehouse Bristol, Apr 3 2021'\n// }\n]; // so create an interface for props? \n// interface items {\n//     firstName: string;\n//     lastName: string;\n// }\n\nconst FilmCarousel = props => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  };\n\n  const goToIndex = newIndex => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }; // const slides = items.map((item) => {\n  //   return (\n  //     <CarouselItem\n  //       className=\"carousel\"\n  //       onExiting={() => setAnimating(true)}\n  //       onExited={() => setAnimating(false)}\n  //       key={item.src}\n  //     >\n  //       <img \n  //       className=\"img-slide\" \n  //       src={item.src} \n  //       alt={item.altText} \n  //       />\n  //       <CarouselCaption \n  //       className=\"carousel\"\n  //       captionText={item.location} \n  //       captionHeader={item.caption} />\n  //     </CarouselItem>\n  //   );\n  // });\n\n\n  return /*#__PURE__*/React.createElement(Carousel, {\n    className: \"carousel\",\n    activeIndex: activeIndex,\n    next: next,\n    previous: previous,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CarouselIndicators, {\n    className: \"indicator\",\n    items: items,\n    activeIndex: activeIndex,\n    onClickHandler: goToIndex,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }), slides, /*#__PURE__*/React.createElement(CarouselControl, {\n    direction: \"prev\",\n    directionText: \"Previous\",\n    onClickHandler: previous,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(CarouselControl, {\n    direction: \"next\",\n    directionText: \"Next\",\n    onClickHandler: next,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FilmCarousel;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/typescript/Cineclub/client/src/components/carousel/Carousel.tsx"],"names":["React","useState","Carousel","CarouselControl","CarouselIndicators","items","src","altText","caption","location","FilmCarousel","props","activeIndex","setActiveIndex","animating","setAnimating","next","nextIndex","length","previous","goToIndex","newIndex","slides"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,QADF,EAGEC,eAHF,EAIEC,kBAJF,QAMO,YANP;AAOA,OAAO,gBAAP,C,CAEA;;AACA,MAAMC,KAAK,GAAG,CACZ;AACEC,EAAAA,GAAG,EAAE,UADP;AAEEC,EAAAA,OAAO,EAAE,sBAFX;AAGEC,EAAAA,OAAO,EAAE,sBAHX;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CADY,EAOZ;AACEH,EAAAA,GAAG,EAAE,aADP;AAEEC,EAAAA,OAAO,EAAE,mBAFX;AAGEC,EAAAA,OAAO,EAAE,mBAHX;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAPY,EAaZ;AACEH,EAAAA,GAAG,EAAE,aADP;AAEEC,EAAAA,OAAO,EAAE,YAFX;AAGEC,EAAAA,OAAO,EAAE,YAHX;AAIEC,EAAAA,QAAQ,EAAE;AAJZ,CAbY,CAmBZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9BY,CAAd,C,CAiCA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,YAAsB,GAAIC,KAAD,IAAW;AACxC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC,CAAD,CAA9C;AACA,QAAM,CAACa,SAAD,EAAYC,YAAZ,IAA4Bd,QAAQ,CAAC,KAAD,CAA1C;;AAEA,QAAMe,IAAI,GAAG,MAAM;AACjB,QAAIF,SAAJ,EAAe;AACf,UAAMG,SAAS,GAAGL,WAAW,KAAKP,KAAK,CAACa,MAAN,GAAe,CAA/B,GAAmC,CAAnC,GAAuCN,WAAW,GAAG,CAAvE;AACAC,IAAAA,cAAc,CAACI,SAAD,CAAd;AACD,GAJD;;AAMA,QAAME,QAAQ,GAAG,MAAM;AACrB,QAAIL,SAAJ,EAAe;AACf,UAAMG,SAAS,GAAGL,WAAW,KAAK,CAAhB,GAAoBP,KAAK,CAACa,MAAN,GAAe,CAAnC,GAAuCN,WAAW,GAAG,CAAvE;AACAC,IAAAA,cAAc,CAACI,SAAD,CAAd;AACD,GAJD;;AAMA,QAAMG,SAAS,GAAIC,QAAD,IAAc;AAC9B,QAAIP,SAAJ,EAAe;AACfD,IAAAA,cAAc,CAACQ,QAAD,CAAd;AACD,GAHD,CAhBwC,CAqBxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;;;AAEA,sBACE,oBAAC,QAAD;AACE,IAAA,SAAS,EAAC,UADZ;AAEE,IAAA,WAAW,EAAET,WAFf;AAGE,IAAA,IAAI,EAAEI,IAHR;AAIE,IAAA,QAAQ,EAAEG,QAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,kBAAD;AACA,IAAA,SAAS,EAAC,WADV;AAEA,IAAA,KAAK,EAAEd,KAFP;AAGA,IAAA,WAAW,EAAEO,WAHb;AAIA,IAAA,cAAc,EAAEQ,SAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAWGE,MAXH,eAYE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAkC,IAAA,aAAa,EAAC,UAAhD;AAA2D,IAAA,cAAc,EAAEH,QAA3E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAZF,eAaE,oBAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,MAA3B;AAAkC,IAAA,aAAa,EAAC,MAAhD;AAAuD,IAAA,cAAc,EAAEH,IAAvE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CA5DD;;AA8DA,eAAeN,YAAf","sourcesContent":["import React, { useState } from 'react';\nimport {\n  Carousel,\n  CarouselItem,\n  CarouselControl,\n  CarouselIndicators,\n  CarouselCaption\n} from 'reactstrap';\nimport './carousel.css';\n\n// const items: {src: string, altText: string, caption: string, location: string}[] = [\nconst items = [\n  {\n    src: 'mood.jpg',\n    altText: 'In The Mood For Love',\n    caption: 'In The Mood For Love',\n    location: 'Picturehouse Liverpool, May 20 2021'\n  },\n  {\n    src: 'br2049.jpeg',\n    altText: 'Blade Runner 2049',\n    caption: 'Blade Runner 2049',\n    location: 'Curzon Bloomsbury London, Dec 5 2020'\n  },\n  {\n    src: 'spinal.jpeg',\n    altText: 'Spinal Tap',\n    caption: 'Spinal Tap',\n    location: 'Genesis Cinema, London, Jan 2 2021'\n  },\n  // {\n  //   src: 'thinred.png',\n  //   altText: 'The Thin Red Line',\n  //   caption: 'The Thin Red Line',\n  //   location: 'Chester Storyhouse , Nov 4 2020'\n  // },\n  //   {\n  //   src: 'odyssey.jpeg',\n  //   altText: '2001: A Space Odyssey',\n  //   caption: '2001: A Space Odyssey',\n  //   location: 'Picturehouse Bristol, Apr 3 2021'\n  // }\n];\n\n// so create an interface for props? \n\n// interface items {\n//     firstName: string;\n//     lastName: string;\n// }\n\nconst FilmCarousel: React.FC = (props) => {\n  const [activeIndex, setActiveIndex] = useState(0);\n  const [animating, setAnimating] = useState(false);\n\n  const next = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === items.length - 1 ? 0 : activeIndex + 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const previous = () => {\n    if (animating) return;\n    const nextIndex = activeIndex === 0 ? items.length - 1 : activeIndex - 1;\n    setActiveIndex(nextIndex);\n  }\n\n  const goToIndex = (newIndex) => {\n    if (animating) return;\n    setActiveIndex(newIndex);\n  }\n\n  // const slides = items.map((item) => {\n  //   return (\n  //     <CarouselItem\n  //       className=\"carousel\"\n  //       onExiting={() => setAnimating(true)}\n  //       onExited={() => setAnimating(false)}\n  //       key={item.src}\n  //     >\n  //       <img \n  //       className=\"img-slide\" \n  //       src={item.src} \n  //       alt={item.altText} \n  //       />\n  //       <CarouselCaption \n  //       className=\"carousel\"\n  //       captionText={item.location} \n  //       captionHeader={item.caption} />\n\n  //     </CarouselItem>\n  //   );\n  // });\n\n  return (\n    <Carousel\n      className=\"carousel\"\n      activeIndex={activeIndex}\n      next={next}\n      previous={previous}\n    >\n      <CarouselIndicators \n      className='indicator'\n      items={items} \n      activeIndex={activeIndex} \n      onClickHandler={goToIndex} />\n      {slides}\n      <CarouselControl direction=\"prev\" directionText=\"Previous\" onClickHandler={previous} />\n      <CarouselControl direction=\"next\" directionText=\"Next\" onClickHandler={next} />\n    </Carousel>\n  );\n}\n\nexport default FilmCarousel;"]},"metadata":{},"sourceType":"module"}