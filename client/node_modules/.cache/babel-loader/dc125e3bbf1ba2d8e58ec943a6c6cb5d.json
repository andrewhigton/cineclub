{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/stripe-button/stripe-button.tsx\";\nimport React from 'react';\nimport { CardElement } from '@stripe/react-stripe-js';\n\nconst StripeCheckoutButton = () => {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(CardElement, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }\n  }, \"Pay Now\"));\n};\n\nexport default StripeCheckoutButton; // import React from 'react';\n// import { loadStripe } from '@stripe/stripe-js';\n// import { connect } from 'react-redux';\n// import { RouteComponentProps } from 'react-router-dom';\n// // import StripeCheckout from 'react-stripe-checkout';\n// import { ticketType, filmType } from '../componentTypes/componentTypes';\n// import { updateFilm } from '../../actions/film';\n// import { updateUserTickets } from '../../actions/auth';\n// import axios from 'axios';\n// interface ChildComponentProps extends RouteComponentProps<any> {\n//   history: any;\n//   // match: any;\n//   // location: any;\n// }\n// interface StripeProps {\n// \t\tprice: number; \n// \t\tfilmData: filmType;\n// \t\tticketData: ticketType;\n// \t\tupdateFilm: (filmData) => void; \n// \t  updateUserTickets: (ticketData) => void;\n// \t  // stripePayment:\n// \t}\n// type JointStripeProps = ChildComponentProps & StripeProps; \n// const StripeCheckoutButton: JointStripeProps = ({ \n// \t\tprice, \n// \t\tfilmData, \n// \t\tticketData, \n// \t\tupdateFilm, \n// \t  updateUserTickets,\n// \t\thistory, \n// \t\t// location \n// \t}) => {\n// \t\t\tconst priceForStripe = price * 100;\n// \t\t\t// const publishableKey = 'pk_test_uccgS5cz3BgmQJF5Jpfi3zhe';\t\t\t\n// \t\t\tconst onToken = token => {\n// \t\t\tif(isNaN(priceForStripe) || priceForStripe < 1) {\n// \t\t\t\talert('Please add tickets before submitting');\t\n// \t\t\t\treturn; \n// \t\t\t}\n// \t\t\taxios(\n// \t\t\t{ \n// \t\t\t\turl: '/api/film/payment', \n// \t\t\t\tmethod: 'post',\n// \t\t\t\tdata: {\n// \t\t\t\t\tamount: priceForStripe,\n// \t\t\t\t\ttoken: token\n// \t\t\t\t}\n// \t\t\t }, onPayment())\n// \t\t\t.then(response => {\n// \t\t\t\tconsole.log('resp is ' + response)\n// \t\t\t \t// alert('Payment succesful. We have sent your tickets to your email address and will notify when the film has been booked');\t\n// \t\t\t \thistory.push('/film/dashboard');\n// \t\t\t \t//window.location.replace('http://localhost:3000/film/dashboard');\n// \t\t\t })\n// \t\t\t.catch(error => {\n// \t\t\t\t// console.log('Payment error: ', JSON.parse(error)); \t\n// \t\t\t\t// console.log('Payment error: ' + error); \t\n// \t\t\t \talert('Payment error. Please use the provided credit card details');\t\n// \t\t\t }) \n// \t} \n//   \tconst onPayment = () => {\n// \t    //prob need history in these two to complete\n// \t    //solve other problems first\n// \t    updateFilm(filmData);\n// \t    updateUserTickets(ticketData);\n//   \t};\n// \treturn (\n// \t\t<div \n// \t\tclassName='how-it-works stripe'>\n// \t\t<StripeCheckout\n// \t\tlabel='Pay now'\n// \t\tname='Saturday Cinema Club'\n// \t\tbillingAddress\n// \t\tshippingAddress\n// \t\tdescription={`Your total is £{price}`}\n// \t\tamount={priceForStripe}\n// \t\tpanelLabel='Pay now'\n// \t\ttoken={onToken}\n// \t\tstripeKey={publishableKey}\n// \t\t//move this out into own file\n// \t\tstyle={{'margin':'2vh 0vh 0vw -5vw'}}\n// \t\t/>\n// \t\t</div>\n// \t\t)\n// \t}\n// const mapStateToProps = state => ({\n//   film: state.film,\n//   auth: state.auth\n// });\n// export default connect(\n//   mapStateToProps, { \n//   updateFilm, \n//   updateUserTickets \n// })(StripeCheckoutButton);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/stripe-button/stripe-button.tsx"],"names":["React","CardElement","StripeCheckoutButton"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,oBAAoB,GAAG,MAAM;AAElC,sBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFD,CAFF;AAQA,CAVD;;AAYA,eAAeA,oBAAf,C,CAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react';\nimport { CardElement } from '@stripe/react-stripe-js';\n\nconst StripeCheckoutButton = () => {\n\n\treturn (\n\n\t\t\t<div> \n\t\t\t\t<CardElement />\n\t\t\t\t<button>Pay Now</button>\n\t\t\t</div>\n\n\t\t )\n}\n\nexport default StripeCheckoutButton;\n\n// import React from 'react';\n\n// import { loadStripe } from '@stripe/stripe-js';\n// import { connect } from 'react-redux';\n// import { RouteComponentProps } from 'react-router-dom';\n// // import StripeCheckout from 'react-stripe-checkout';\n// import { ticketType, filmType } from '../componentTypes/componentTypes';\n// import { updateFilm } from '../../actions/film';\n// import { updateUserTickets } from '../../actions/auth';\n// import axios from 'axios';\n\n// interface ChildComponentProps extends RouteComponentProps<any> {\n//   history: any;\n//   // match: any;\n//   // location: any;\n// }\n\n// interface StripeProps {\n// \t\tprice: number; \n// \t\tfilmData: filmType;\n// \t\tticketData: ticketType;\n// \t\tupdateFilm: (filmData) => void; \n// \t  updateUserTickets: (ticketData) => void;\n// \t  // stripePayment:\n// \t}\n\n// type JointStripeProps = ChildComponentProps & StripeProps; \n\n// const StripeCheckoutButton: JointStripeProps = ({ \n// \t\tprice, \n// \t\tfilmData, \n// \t\tticketData, \n// \t\tupdateFilm, \n// \t  updateUserTickets,\n// \t\thistory, \n// \t\t// location \n// \t}) => {\n\n\n// \t\t\tconst priceForStripe = price * 100;\n// \t\t\t// const publishableKey = 'pk_test_uccgS5cz3BgmQJF5Jpfi3zhe';\t\t\t\n\t\t\t\n// \t\t\tconst onToken = token => {\n// \t\t\tif(isNaN(priceForStripe) || priceForStripe < 1) {\n// \t\t\t\talert('Please add tickets before submitting');\t\n// \t\t\t\treturn; \n// \t\t\t}\n\n\t\t\t\n// \t\t\taxios(\n// \t\t\t{ \n// \t\t\t\turl: '/api/film/payment', \n// \t\t\t\tmethod: 'post',\n// \t\t\t\tdata: {\n// \t\t\t\t\tamount: priceForStripe,\n// \t\t\t\t\ttoken: token\n// \t\t\t\t}\n// \t\t\t }, onPayment())\n// \t\t\t.then(response => {\n// \t\t\t\tconsole.log('resp is ' + response)\n// \t\t\t \t// alert('Payment succesful. We have sent your tickets to your email address and will notify when the film has been booked');\t\n// \t\t\t \thistory.push('/film/dashboard');\n// \t\t\t \t//window.location.replace('http://localhost:3000/film/dashboard');\n// \t\t\t })\n// \t\t\t.catch(error => {\n// \t\t\t\t// console.log('Payment error: ', JSON.parse(error)); \t\n// \t\t\t\t// console.log('Payment error: ' + error); \t\n// \t\t\t \talert('Payment error. Please use the provided credit card details');\t\n// \t\t\t }) \n// \t} \n\n//   \tconst onPayment = () => {\n// \t    //prob need history in these two to complete\n// \t    //solve other problems first\n// \t    updateFilm(filmData);\n// \t    updateUserTickets(ticketData);\n//   \t};\n\n// \treturn (\n// \t\t<div \n// \t\tclassName='how-it-works stripe'>\n// \t\t<StripeCheckout\n// \t\tlabel='Pay now'\n// \t\tname='Saturday Cinema Club'\n// \t\tbillingAddress\n// \t\tshippingAddress\n// \t\tdescription={`Your total is £{price}`}\n// \t\tamount={priceForStripe}\n// \t\tpanelLabel='Pay now'\n// \t\ttoken={onToken}\n// \t\tstripeKey={publishableKey}\n// \t\t//move this out into own file\n// \t\tstyle={{'margin':'2vh 0vh 0vw -5vw'}}\n// \t\t/>\n// \t\t</div>\n// \t\t)\n// \t}\n\n// const mapStateToProps = state => ({\n//   film: state.film,\n//   auth: state.auth\n// });\n\n// export default connect(\n//   mapStateToProps, { \n//   updateFilm, \n//   updateUserTickets \n// })(StripeCheckoutButton);"]},"metadata":{},"sourceType":"module"}