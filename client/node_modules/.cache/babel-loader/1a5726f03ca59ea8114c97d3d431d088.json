{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { createSelector } from 'reselect';\n// import { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css';\n; // const selectFilmReducer = (state: RootState): CheckoutFilmProps => state.film; \n\nconst selectData = state => state.film; // console.log(selectData)\n//\n// const mySelect = useSelector(selectData);\n\n\nconst selectFilm = createSelector(selectData, i => i.film);\nconsole.log(selectFilm);\n\nconst CheckoutFilm = _ref => {\n  let {\n    // state,\n    // films,\n    films: {\n      film,\n      loading\n    }\n  } = _ref;\n  // const films = selectFilmReducer  \n  // console.log('select ', films)\n  // const { film, loading } = films\n  // const filmSel = useSelector((state: RootState) => state.film)\n  // const filmSel = useSelector(selectFilm)\n  // console.log('state ', state)\n  // console.log('films ', films)\n  console.log('film ', film);\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n  let [bookingCost, setBookingCost] = useState(0);\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  };\n\n  if (film) {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"checkout-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 13\n      }\n    }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }\n    }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, \"Price: \\xA3\", film.ticketPrice, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }\n    }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"header-block\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 13\n      }\n    }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n      className: \"form\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-ticket\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      min: \"0\",\n      placeholder: \"Enter number of tickets\",\n      name: \"tickets\",\n      onChange: e => onChange(e),\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(StripeCheckoutButton // filmData={filmData}\n    // ticketData={ticketData}\n    , {\n      price: bookingCost,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Link, {\n      className: \"checkout-button btn btn-back\",\n      to: \"/film/dashboard\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 13\n      }\n    }, \"Go Back\")))));\n  }\n};\n\nconst mapStateToProps = state => ({\n  // films: state.film,\n  // state: state\n  films: selectFilm\n}); // const connector = connect(mapStateToProps);\n// const mapStateToProps = createStructuredSelector({\n//   films: selectFilmReducer\n// });\n// export default connect(CheckoutFilm as any); \n\n\nexport default connect(mapStateToProps)(CheckoutFilm); //   updateUserTickets \n// })(withRouter(CheckoutFilm));\n//these work, right out the box, have to get rid of mapstate HOC\n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx"],"names":["React","useState","connect","Link","StripeCheckoutButton","createSelector","selectData","state","film","selectFilm","i","console","log","CheckoutFilm","films","loading","filmData","setFilmData","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","bookingCost","setBookingCost","ticketData","setTicketData","numberOfTickets","cost","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\n\nimport { connect, useSelector, ConnectedProps } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { createSelector } from 'reselect';\nimport { createStructuredSelector } from 'reselect';\nimport { RootState } from '../../reducers/index';\nimport { FilmInitialStateType } from '../../reducers/film';\n// import { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css'\n\ninterface CheckoutFilmProps {\n  films: filmInterface \n  };\n  \n\n// const selectFilmReducer = (state: RootState): CheckoutFilmProps => state.film; \n\nconst selectData = (state: RootState) => state.film;\n// console.log(selectData)\n//\n// const mySelect = useSelector(selectData);\nconst selectFilm = createSelector(\n  selectData,\n  (i) => i.film \n\n);\n\nconsole.log(selectFilm)\n\ntype PropsFromRedux = ConnectedProps<typeof connector>\n\ntype MyComponentProps = PropsFromRedux & CheckoutFilmProps;\n\nconst CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n    \n    // state,\n    // films,\n    films: {film, loading}, \n  }) => {\n   \n  // const films = selectFilmReducer  \n  // console.log('select ', films)\n  // const { film, loading } = films\n// const filmSel = useSelector((state: RootState) => state.film)\n// const filmSel = useSelector(selectFilm)\n// console.log('state ', state)\n// console.log('films ', films)\nconsole.log('film ', film)\n  \n\n  const [filmData, setFilmData] = useState<filmType>({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState<number>(0);\n\n  const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n    const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n if(film) {\n  return (\n      <>\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div className=\"form-ticket\">   \n            <input\n              type='number'\n              min='0'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n              <StripeCheckoutButton\n               // filmData={filmData}\n               // ticketData={ticketData}\n               price={bookingCost} \n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n        </>\n    )\n  }\n}\n\nconst mapStateToProps = (state: RootState) => ({\n  // films: state.film,\n  // state: state\n  films: selectFilm\n});\n\n// const connector = connect(mapStateToProps);\n// const mapStateToProps = createStructuredSelector({\n//   films: selectFilmReducer\n// });\n\n// export default connect(CheckoutFilm as any); \nexport default connect(mapStateToProps)(CheckoutFilm as any); \n//   updateUserTickets \n// })(withRouter(CheckoutFilm));\n\n\n//these work, right out the box, have to get rid of mapstate HOC\n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)\n"]},"metadata":{},"sourceType":"module"}