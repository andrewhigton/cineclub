{"ast":null,"code":"import _objectSpread from\"/Users/andrewhigton/Documents/code/typescript/cineclub/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ActionType}from'../actions/types';;var initialState={film:null,films:[]||null,filmLoading:true,error:{}};var film=function film(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;var action=arguments.length>1?arguments[1]:undefined;var payload;if(action.payload){payload=action.payload;}switch(action.type){case ActionType.GET_FILM:return _objectSpread(_objectSpread({},state),{},{film:payload,filmLoading:false});case ActionType.GET_FILMS:return _objectSpread(_objectSpread({},state),{},{films:payload,filmLoading:false});case ActionType.UPDATE_FILM:return _objectSpread(_objectSpread({},state),{},{film:payload,filmLoading:false});case ActionType.FILM_ERROR:return _objectSpread(_objectSpread({},state),{},{error:payload,filmLoading:false});//this needed?\ncase ActionType.CLEAR_FILM:return _objectSpread(_objectSpread({},state),{},{film:null,films:[],filmLoading:false});default:return state;}};export default film;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/reducers/film.tsx"],"names":["ActionType","initialState","film","films","filmLoading","error","state","action","payload","type","GET_FILM","GET_FILMS","UPDATE_FILM","FILM_ERROR","CLEAR_FILM"],"mappings":"mLAAA,OAASA,UAAT,KAA2B,kBAA3B,CAQC,CAED,GAAMC,CAAAA,YAAkC,CAAG,CACzCC,IAAI,CAAE,IADmC,CAEzCC,KAAK,CAAE,IAAM,IAF4B,CAGzCC,WAAW,CAAE,IAH4B,CAIzCC,KAAK,CAAE,EAJkC,CAA3C,CAOA,GAAMH,CAAAA,IAAI,CAAG,QAAPA,CAAAA,IAAO,EAGN,IAFLI,CAAAA,KAEK,2DAFGL,YAEH,IADLM,CAAAA,MACK,2CACC,GAAIC,CAAAA,OAAJ,CACA,GAAGD,MAAM,CAACC,OAAV,CAAmB,CACjBA,OAAO,CAAGD,MAAM,CAACC,OAAjB,CACD,CACD,OAAQD,MAAM,CAACE,IAAf,EACE,IAAKT,CAAAA,UAAU,CAACU,QAAhB,CACA,sCACKJ,KADL,MAEEJ,IAAI,CAAEM,OAFR,CAGEJ,WAAW,CAAE,KAHf,GAKA,IAAKJ,CAAAA,UAAU,CAACW,SAAhB,CACA,sCACKL,KADL,MAEEH,KAAK,CAAEK,OAFT,CAGEJ,WAAW,CAAE,KAHf,GAKA,IAAKJ,CAAAA,UAAU,CAACY,WAAhB,CACA,sCACKN,KADL,MAEEJ,IAAI,CAAEM,OAFR,CAGEJ,WAAW,CAAE,KAHf,GAKA,IAAKJ,CAAAA,UAAU,CAACa,UAAhB,CACA,sCACKP,KADL,MAEED,KAAK,CAAEG,OAFT,CAGEJ,WAAW,CAAE,KAHf,GAKA;AACA,IAAKJ,CAAAA,UAAU,CAACc,UAAhB,CACA,sCACKR,KADL,MAEEJ,IAAI,CAAE,IAFR,CAGEC,KAAK,CAAE,EAHT,CAIEC,WAAW,CAAE,KAJf,GAMA,QACE,MAAOE,CAAAA,KAAP,CAlCJ,CAoCH,CA5CL,CA8CE,cAAeJ,CAAAA,IAAf","sourcesContent":["import { ActionType } from '../actions/types';\nimport { ActionFilms } from './indexTypes';\n\nexport interface FilmInitialStateType {\n  film: {} | null;\n  films: string[];\n  filmLoading: boolean;\n  error: any;\n};\n\nconst initialState: FilmInitialStateType = {\n  film: null,\n  films: [] || null,\n  filmLoading: true,\n  error: {}\n};\n\nconst film = (\n  state = initialState,\n  action: ActionFilms,\n  ) => {\n        let payload;  \n        if(action.payload) {\n          payload = action.payload; \n        }\n        switch (action.type) {\n          case ActionType.GET_FILM:\n          return {\n            ...state,\n            film: payload,\n            filmLoading: false \n          };\n          case ActionType.GET_FILMS:\n          return {\n            ...state,\n            films: payload,\n            filmLoading: false \n          };\n          case ActionType.UPDATE_FILM:\n          return {\n            ...state,\n            film: payload,\n            filmLoading: false \n          }; \n          case ActionType.FILM_ERROR:\n          return {\n            ...state,\n            error: payload,\n            filmLoading: false\n          }; \n          //this needed?\n          case ActionType.CLEAR_FILM:\n          return {\n            ...state,\n            film: null,\n            films: [],\n            filmLoading: false\n          };\n          default:\n            return state\n        }\n    }\n\n  export default film;"]},"metadata":{},"sourceType":"module"}