{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css';\n;\nlet filmDataForDispatch;\nlet ticketDataForDispatch = {\n  cinema: \"Chester Storyhouse\",\n  cost: 8,\n  crowdfundTarget: 90,\n  date: \"2021-06-05T00:00:00.000Z\",\n  numberOfTickets: 1,\n  ticketPrice: 8,\n  title: \"Parasite\",\n  totalsoFar: 75\n};\n\nconst CheckoutFilm = _ref => {\n  let {\n    films: {\n      film,\n      loading\n    },\n    updateUserTickets\n  } = _ref;\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n  let [bookingCost, setBookingCost] = useState(0);\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  }); // filmDataForDispatch = filmData;\n  // ticketDataForDispatch = ticketData\n  // console.log('ticket ', ticketDataForDispatch)\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n    updateUserTickets(ticketDataForDispatch); // console.log('call on page')\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  }; // const callHandler = (e: React.FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault()\n  //   console.log('call')\n  // }\n  //ok, put all of this in state. \n  //fetch state from stripe, in mapstate, \n  //dispatch to mongo once it is complete\n\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 13\n    }\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n    filmData: filmData,\n    ticketData: ticketData,\n    price: bookingCost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"checkout-button btn btn-back\",\n    to: \"/film/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 13\n    }\n  }, \"Go Back\")))));\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nconst mapDispatchToProps = (dispatch, ticketDataForDispatch) => {\n  return {\n    //you;re not calling this anywhere. what happens if you do? \n    updateUserTickets: () => updateUserTickets(ticketDataForDispatch) // updateFilm: () => dispatch(filmDataForDispatch) \n\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutFilm); // const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx"],"names":["React","useState","connect","Link","StripeCheckoutButton","updateUserTickets","filmDataForDispatch","ticketDataForDispatch","cinema","cost","crowdfundTarget","date","numberOfTickets","ticketPrice","title","totalsoFar","CheckoutFilm","films","film","loading","filmData","setFilmData","_id","user","image","bookingCost","setBookingCost","ticketData","setTicketData","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { updateUserTickets } from '../../actions/auth';\nimport { updateFilm } from '../../actions/film';\n\nimport './checkoutfilm.css'\n\ninterface CheckoutFilmProps {\n  films: filmInterface;\n  updateUserTickets: (ticketDataForDispatch) => void; \n  };\n\nlet filmDataForDispatch;\nlet ticketDataForDispatch = {\n  cinema: \"Chester Storyhouse\",\ncost: 8,\ncrowdfundTarget: 90,\ndate: \"2021-06-05T00:00:00.000Z\",\nnumberOfTickets: 1,\nticketPrice: 8,\ntitle: \"Parasite\",\ntotalsoFar: 75,\n};\n  \nconst CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n    films: {film, loading}, \n    updateUserTickets,\n  }) => {\n   \n\n  const [filmData, setFilmData] = useState<filmType>({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState<number>(0);\n\n  const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n    // filmDataForDispatch = filmData;\n    // ticketDataForDispatch = ticketData\n    // console.log('ticket ', ticketDataForDispatch)\n\n    const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n    updateUserTickets(ticketDataForDispatch)\n    // console.log('call on page')\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n\n\n  // const callHandler = (e: React.FormEvent<HTMLFormElement>) => {\n  //   e.preventDefault()\n  //   console.log('call')\n  // }\n  //ok, put all of this in state. \n  //fetch state from stripe, in mapstate, \n  //dispatch to mongo once it is complete\n\n \n  return (\n      <>\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div className=\"form-ticket\">   \n            <input\n              type='number'\n              min='0'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n            {/*//need a handler here? */}\n              <StripeCheckoutButton\n               \n               filmData={filmData}\n               ticketData={ticketData}\n               price={bookingCost} \n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n        </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nconst mapDispatchToProps = (dispatch, ticketDataForDispatch) => {\n  return {\n    //you;re not calling this anywhere. what happens if you do? \n     updateUserTickets: () => updateUserTickets(ticketDataForDispatch),\n     // updateFilm: () => dispatch(filmDataForDispatch) \n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CheckoutFilm); \n\n\n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)\n"]},"metadata":{},"sourceType":"module"}