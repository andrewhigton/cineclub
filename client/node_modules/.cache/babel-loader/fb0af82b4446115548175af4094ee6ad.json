{"ast":null,"code":"'use strict';\n\nvar utils = require('./utils');\n\nvar makeRequest = require('./makeRequest');\n\nvar makeAutoPaginationMethods = require('./autoPagination').makeAutoPaginationMethods;\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n */\n\n\nfunction stripeMethod(spec) {\n  return function () {\n    var self = this;\n    var args = [].slice.call(arguments);\n    var callback = typeof args[args.length - 1] == 'function' && args.pop();\n    var requestPromise = utils.callbackifyPromiseWithTimeout(makeRequest(self, args, spec, {}), callback);\n\n    if (spec.methodType === 'list') {\n      var autoPaginationMethods = makeAutoPaginationMethods(self, args, spec, requestPromise);\n      Object.assign(requestPromise, autoPaginationMethods);\n    }\n\n    return requestPromise;\n  };\n}\n\nmodule.exports = stripeMethod;","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/node_modules/stripe/lib/StripeMethod.js"],"names":["utils","require","makeRequest","makeAutoPaginationMethods","stripeMethod","spec","self","args","slice","call","arguments","callback","length","pop","requestPromise","callbackifyPromiseWithTimeout","methodType","autoPaginationMethods","Object","assign","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,SAAD,CAAnB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,eAAD,CAAzB;;AACA,IAAIE,yBAAyB,GAAGF,OAAO,CAAC,kBAAD,CAAP,CAA4BE,yBAA5D;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASC,YAAT,CAAsBC,IAAtB,EAA4B;AAC1B,SAAO,YAAW;AAChB,QAAIC,IAAI,GAAG,IAAX;AACA,QAAIC,IAAI,GAAG,GAAGC,KAAH,CAASC,IAAT,CAAcC,SAAd,CAAX;AAEA,QAAIC,QAAQ,GAAG,OAAOJ,IAAI,CAACA,IAAI,CAACK,MAAL,GAAc,CAAf,CAAX,IAAgC,UAAhC,IAA8CL,IAAI,CAACM,GAAL,EAA7D;AAEA,QAAIC,cAAc,GAAGd,KAAK,CAACe,6BAAN,CAAoCb,WAAW,CAACI,IAAD,EAAOC,IAAP,EAAaF,IAAb,EAAmB,EAAnB,CAA/C,EAAuEM,QAAvE,CAArB;;AAEA,QAAIN,IAAI,CAACW,UAAL,KAAoB,MAAxB,EAAgC;AAC9B,UAAIC,qBAAqB,GAAGd,yBAAyB,CAACG,IAAD,EAAOC,IAAP,EAAaF,IAAb,EAAmBS,cAAnB,CAArD;AACAI,MAAAA,MAAM,CAACC,MAAP,CAAcL,cAAd,EAA8BG,qBAA9B;AACD;;AAED,WAAOH,cAAP;AACD,GAdD;AAeD;;AAEDM,MAAM,CAACC,OAAP,GAAiBjB,YAAjB","sourcesContent":["'use strict';\n\nvar utils = require('./utils');\nvar makeRequest = require('./makeRequest');\nvar makeAutoPaginationMethods = require('./autoPagination').makeAutoPaginationMethods;\n\n/**\n * Create an API method from the declared spec.\n *\n * @param [spec.method='GET'] Request Method (POST, GET, DELETE, PUT)\n * @param [spec.path=''] Path to be appended to the API BASE_PATH, joined with\n *  the instance's path (e.g. 'charges' or 'customers')\n * @param [spec.urlParams=[]] Array of required arguments in the order that they\n *  must be passed by the consumer of the API. Subsequent optional arguments are\n *  optionally passed through a hash (Object) as the penultimate argument\n *  (preceding the also-optional callback argument\n * @param [spec.encode] Function for mutating input parameters to a method.\n *  Usefully for applying transforms to data on a per-method basis.\n * @param [spec.host] Hostname for the request.\n */\nfunction stripeMethod(spec) {\n  return function() {\n    var self = this;\n    var args = [].slice.call(arguments);\n\n    var callback = typeof args[args.length - 1] == 'function' && args.pop();\n\n    var requestPromise = utils.callbackifyPromiseWithTimeout(makeRequest(self, args, spec, {}), callback)\n\n    if (spec.methodType === 'list') {\n      var autoPaginationMethods = makeAutoPaginationMethods(self, args, spec, requestPromise);\n      Object.assign(requestPromise, autoPaginationMethods);\n    }\n\n    return requestPromise;\n  };\n}\n\nmodule.exports = stripeMethod;\n"]},"metadata":{},"sourceType":"script"}