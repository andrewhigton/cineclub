{"ast":null,"code":"'use strict';\n\nvar StripeResource = require('../StripeResource');\n\nvar stripeMethod = StripeResource.method;\n\nvar utils = require('../utils');\n\nvar oAuthHost = 'connect.stripe.com';\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n  authorizeUrl: function (params, options) {\n    params = params || {};\n    options = options || {};\n    var path = 'oauth/authorize'; // For Express accounts, the path changes\n\n    if (options.express) {\n      path = 'express/' + path;\n    }\n\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n\n    return 'https://' + oAuthHost + '/' + path + '?' + utils.stringifyRequestData(params);\n  },\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost\n  }),\n  deauthorize: function (spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost\n    }).apply(this, arguments);\n  }\n});","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/node_modules/stripe/lib/resources/OAuth.js"],"names":["StripeResource","require","stripeMethod","method","utils","oAuthHost","module","exports","extend","basePath","authorizeUrl","params","options","path","express","response_type","client_id","_stripe","getClientId","scope","stringifyRequestData","token","host","deauthorize","spec","apply","arguments"],"mappings":"AAAA;;AAEA,IAAIA,cAAc,GAAGC,OAAO,CAAC,mBAAD,CAA5B;;AACA,IAAIC,YAAY,GAAGF,cAAc,CAACG,MAAlC;;AACA,IAAIC,KAAK,GAAGH,OAAO,CAAC,UAAD,CAAnB;;AAEA,IAAII,SAAS,GAAG,oBAAhB;AAEAC,MAAM,CAACC,OAAP,GAAiBP,cAAc,CAACQ,MAAf,CAAsB;AACrCC,EAAAA,QAAQ,EAAE,GAD2B;AAGrCC,EAAAA,YAAY,EAAE,UAASC,MAAT,EAAiBC,OAAjB,EAA0B;AACtCD,IAAAA,MAAM,GAAGA,MAAM,IAAI,EAAnB;AACAC,IAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AAEA,QAAIC,IAAI,GAAG,iBAAX,CAJsC,CAMtC;;AACA,QAAID,OAAO,CAACE,OAAZ,EAAqB;AACnBD,MAAAA,IAAI,GAAG,aAAaA,IAApB;AACD;;AAED,QAAI,CAACF,MAAM,CAACI,aAAZ,EAA2B;AACzBJ,MAAAA,MAAM,CAACI,aAAP,GAAuB,MAAvB;AACD;;AAED,QAAI,CAACJ,MAAM,CAACK,SAAZ,EAAuB;AACrBL,MAAAA,MAAM,CAACK,SAAP,GAAmB,KAAKC,OAAL,CAAaC,WAAb,EAAnB;AACD;;AAED,QAAI,CAACP,MAAM,CAACQ,KAAZ,EAAmB;AACjBR,MAAAA,MAAM,CAACQ,KAAP,GAAe,YAAf;AACD;;AAED,WAAO,aAAad,SAAb,GAAyB,GAAzB,GAA+BQ,IAA/B,GAAsC,GAAtC,GAA4CT,KAAK,CAACgB,oBAAN,CAA2BT,MAA3B,CAAnD;AACD,GA3BoC;AA6BrCU,EAAAA,KAAK,EAAEnB,YAAY,CAAC;AAClBC,IAAAA,MAAM,EAAE,MADU;AAElBU,IAAAA,IAAI,EAAE,aAFY;AAGlBS,IAAAA,IAAI,EAAEjB;AAHY,GAAD,CA7BkB;AAmCrCkB,EAAAA,WAAW,EAAE,UAASC,IAAT,EAAe;AAC1B,QAAI,CAACA,IAAI,CAACR,SAAV,EAAqB;AACnBQ,MAAAA,IAAI,CAACR,SAAL,GAAiB,KAAKC,OAAL,CAAaC,WAAb,EAAjB;AACD;;AAED,WAAOhB,YAAY,CAAC;AAClBC,MAAAA,MAAM,EAAE,MADU;AAElBU,MAAAA,IAAI,EAAE,mBAFY;AAGlBS,MAAAA,IAAI,EAAEjB;AAHY,KAAD,CAAZ,CAIJoB,KAJI,CAIE,IAJF,EAIQC,SAJR,CAAP;AAKD;AA7CoC,CAAtB,CAAjB","sourcesContent":["'use strict';\n\nvar StripeResource = require('../StripeResource');\nvar stripeMethod = StripeResource.method;\nvar utils = require('../utils');\n\nvar oAuthHost = 'connect.stripe.com';\n\nmodule.exports = StripeResource.extend({\n  basePath: '/',\n\n  authorizeUrl: function(params, options) {\n    params = params || {};\n    options = options || {};\n\n    var path = 'oauth/authorize';\n\n    // For Express accounts, the path changes\n    if (options.express) {\n      path = 'express/' + path;\n    }\n\n    if (!params.response_type) {\n      params.response_type = 'code';\n    }\n\n    if (!params.client_id) {\n      params.client_id = this._stripe.getClientId();\n    }\n\n    if (!params.scope) {\n      params.scope = 'read_write';\n    }\n\n    return 'https://' + oAuthHost + '/' + path + '?' + utils.stringifyRequestData(params);\n  },\n\n  token: stripeMethod({\n    method: 'POST',\n    path: 'oauth/token',\n    host: oAuthHost,\n  }),\n\n  deauthorize: function(spec) {\n    if (!spec.client_id) {\n      spec.client_id = this._stripe.getClientId();\n    }\n\n    return stripeMethod({\n      method: 'POST',\n      path: 'oauth/deauthorize',\n      host: oAuthHost,\n    }).apply(this, arguments);\n  },\n});\n"]},"metadata":{},"sourceType":"script"}