{"ast":null,"code":"import React,{Fragment,useEffect}from'react';import{connect}from'react-redux';import Footer from'../components/footer/Footer';import Spinner from'../components/spinner/Spinner';import{loadFilms}from'../actions/film';import DashboardTickets from'../components/user-dashboard/Dashboard-Tickets';import DashboardFilms from'../components/user-dashboard/Dashboard-Films';var Dashboard=function Dashboard(_ref){var user=_ref.auth.user,_ref$film=_ref.film,films=_ref$film.films,filmLoading=_ref$film.filmLoading,loadFilms=_ref.loadFilms,history=_ref.history;useEffect(function(){loadFilms();},[loadFilms]);return!user?/*#__PURE__*/React.createElement(Spinner,null):/*#__PURE__*/React.createElement(Fragment,null,/*#__PURE__*/React.createElement(\"div\",null,/*#__PURE__*/React.createElement(\"h2\",{className:\"welcome-message\"},\"Welcome \",user&&user.name)),/*#__PURE__*/React.createElement(\"div\",{className:\"dashboard-display\"},/*#__PURE__*/React.createElement(\"div\",{className:\"tickets-films-block\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"ticket-film-head\"},\"Your tickets\"),/*#__PURE__*/React.createElement(DashboardTickets,null)),/*#__PURE__*/React.createElement(\"div\",{className:\"tickets-films-block\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"ticket-film-head\"},\"Your films\"),/*#__PURE__*/React.createElement(DashboardFilms,{user:user,films:films,filmLoading:filmLoading}))),/*#__PURE__*/React.createElement(Footer,null));};var mapStateToProps=function mapStateToProps(state){return{auth:state.auth,film:state.film};};export default connect(mapStateToProps,{loadFilms:loadFilms})(Dashboard);","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/pages/Dashboard.tsx"],"names":["React","Fragment","useEffect","connect","Footer","Spinner","loadFilms","DashboardTickets","DashboardFilms","Dashboard","user","auth","film","films","filmLoading","history","name","mapStateToProps","state"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,OAASC,OAAT,KAAwB,aAAxB,CAEA,MAAOC,CAAAA,MAAP,KAAmB,6BAAnB,CACA,MAAOC,CAAAA,OAAP,KAAoB,+BAApB,CACA,OAASC,SAAT,KAA0B,iBAA1B,CAEA,MAAOC,CAAAA,gBAAP,KAA6B,gDAA7B,CACA,MAAOC,CAAAA,cAAP,KAA2B,8CAA3B,CAcA,GAAMC,CAAAA,SAAwC,CAAG,QAA3CA,CAAAA,SAA2C,MAKzC,IAJEC,CAAAA,IAIF,MAJNC,IAIM,CAJED,IAIF,gBAHNE,IAGM,CAHEC,KAGF,WAHEA,KAGF,CAHSC,WAGT,WAHSA,WAGT,CAFNR,SAEM,MAFNA,SAEM,CADNS,OACM,MADNA,OACM,CAENb,SAAS,CAAC,UAAO,CACbI,SAAS,GACZ,CAFQ,CAEN,CAACA,SAAD,CAFM,CAAT,CAIF,MACE,CAACI,IAAD,cAAQ,oBAAC,OAAD,MAAR,cACE,oBAAC,QAAD,mBAEM,4CACA,0BAAI,SAAS,CAAC,iBAAd,aAAyCA,IAAI,EAAIA,IAAI,CAACM,IAAtD,CADA,CAFN,cAKM,2BAAK,SAAS,CAAC,mBAAf,eACA,2BAAK,SAAS,CAAC,qBAAf,eACA,0BAAI,SAAS,CAAC,kBAAd,iBADA,cAEA,oBAAC,gBAAD,MAFA,CADA,cAKA,2BAAK,SAAS,CAAC,qBAAf,eACA,0BAAI,SAAS,CAAC,kBAAd,eADA,cAEA,oBAAC,cAAD,EACA,IAAI,CAAEN,IADN,CAEA,KAAK,CAAEG,KAFP,CAGA,WAAW,CAAEC,WAHb,EAFA,CALA,CALN,cAmBM,oBAAC,MAAD,MAnBN,CAFJ,CA0BC,CArCD,CAuCA,GAAMG,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,QAAK,CACjCP,IAAI,CAAEO,KAAK,CAACP,IADqB,CAEjCC,IAAI,CAAEM,KAAK,CAACN,IAFqB,CAAL,EAA7B,CAKA,cAAeT,CAAAA,OAAO,CAACc,eAAD,CAAkB,CAAEX,SAAS,CAATA,SAAF,CAAlB,CAAP,CAAwCG,SAAxC,CAAf","sourcesContent":["import React, { Fragment, useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { RouteComponentProps } from 'react-router-dom';\nimport Footer from '../components/footer/Footer';\nimport Spinner from '../components/spinner/Spinner'\nimport { loadFilms } from '../actions/film';\nimport { AuthProps, FilmProps } from '../utils/componentTypes';\nimport DashboardTickets from '../components/user-dashboard/Dashboard-Tickets';\nimport DashboardFilms from '../components/user-dashboard/Dashboard-Films';\n\ninterface ChildComponentProps extends RouteComponentProps<any> {\n  history: any\n}\n\ninterface DashboardProps {  \n  auth: AuthProps,\n  film: FilmProps,   \n  loadFilms: () => void;\n}\n\ntype JointDashboardProps = DashboardProps & ChildComponentProps;\n\nconst Dashboard: React.FC<JointDashboardProps> = ({ \n  auth: { user }, \n  film: { films, filmLoading },\n  loadFilms,\n  history\n  }) => {\n\n  useEffect(() =>  {\n      loadFilms();  \n  }, [loadFilms]); \n\nreturn (\n  !user ? <Spinner />\n  : <Fragment>    \n\n          <div>\n          <h2 className='welcome-message'>Welcome {user && user.name}</h2>\n          </div>\n          <div className=\"dashboard-display\">\n          <div className='tickets-films-block'>\n          <h2 className='ticket-film-head'>Your tickets</h2>\n          <DashboardTickets />\n          </div>\n          <div className='tickets-films-block'>\n          <h2 className='ticket-film-head'>Your films</h2>\n          <DashboardFilms\n          user={user}\n          films={films}\n          filmLoading={filmLoading}\n          />\n          </div>\n          </div>\n          <Footer />\n\n        </Fragment>\n        \n      ) \n}\n\nconst mapStateToProps = state => ({\n auth: state.auth,\n film: state.film,\n});\n\nexport default connect(mapStateToProps, { loadFilms })(Dashboard);"]},"metadata":{},"sourceType":"module"}