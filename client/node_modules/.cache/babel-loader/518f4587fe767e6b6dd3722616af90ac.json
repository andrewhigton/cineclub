{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/App.tsx\";\nimport React, { Fragment, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login';\nimport NavbarComponent from './components/navbar/Navbar';\nimport Landing from './pages/Landing';\nimport HowItWorks from './components/howitworks/HowItWorks';\nimport Dashboard from './pages/Dashboard';\nimport CreateFilm from './pages/CreateFilm';\nimport BookingPage from './pages/BookingPage';\nimport FilmPage from './pages/FilmPage';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport { ActionType } from './actions/types';\nimport './App.css';\n\nif (localStorage.token) {\n  setAuthToken(localStorage.token);\n}\n\nconst App = () => {\n  const dispatch = useDispatch();\n  useEffect(() => {\n    // check for token in LS when app first runs\n    if (localStorage.token) {\n      // if there is a token set axios headers for all requests\n      setAuthToken(localStorage.token);\n    } // try to fetch a user, if no token or invalid token we\n    // will get a 401 response from our API\n\n\n    dispatch(loadUser()); // log user out from all tabs if they log out in one tab\n\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) dispatch({\n        type: ActionType.LOGOUT\n      });\n    });\n  }, []);\n  return /*#__PURE__*/React.createElement(Router, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(NavbarComponent, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/\",\n    component: Landing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"dark-overlay\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Switch, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/register\",\n    component: Register,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/login\",\n    component: Login,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/film/\",\n    component: FilmPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Route, {\n    exact: true,\n    path: \"/howitworks\",\n    component: HowItWorks,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/api/film/:id\",\n    component: BookingPage,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/film/dashboard\",\n    component: Dashboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(PrivateRoute, {\n    path: \"/create-film\",\n    component: CreateFilm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport default App;\n{\n  /*<Route path='/api/film/:id' element={<BookingPage authRoute=\"login\" />}/>*/\n}","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/App.tsx"],"names":["React","Fragment","useEffect","useDispatch","BrowserRouter","Router","Route","Switch","Register","Login","NavbarComponent","Landing","HowItWorks","Dashboard","CreateFilm","BookingPage","FilmPage","setAuthToken","PrivateRoute","ActionType","localStorage","token","App","dispatch","loadUser","window","addEventListener","type","LOGOUT"],"mappings":"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","sourcesContent":["import React, { Fragment, FunctionComponent, useEffect  } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { BrowserRouter as Router, Route, Switch, RouteProps } from 'react-router-dom';\nimport { RouteComponentProps } from \"@reach/router\";\nimport Register from './components/auth/Register';\nimport Login from './components/auth/Login'; \nimport NavbarComponent from './components/navbar/Navbar';\nimport Landing from './pages/Landing';\nimport HowItWorks from './components/howitworks/HowItWorks';\nimport Dashboard from './pages/Dashboard';\nimport CreateFilm from './pages/CreateFilm';\nimport BookingPage from './pages/BookingPage';\nimport FilmPage from './pages/FilmPage';\nimport setAuthToken from './utils/setAuthToken';\nimport PrivateRoute from './components/routing/PrivateRoute';\nimport { ActionType } from './actions/types';\nimport './App.css';\n\n\nif (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\nconst App: React.FC = () => { \n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    // check for token in LS when app first runs\n    if (localStorage.token) {\n      // if there is a token set axios headers for all requests\n      setAuthToken(localStorage.token);\n    }\n    // try to fetch a user, if no token or invalid token we\n    // will get a 401 response from our API\n    dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) dispatch({ type: ActionType.LOGOUT });\n    });\n  }, []);\n\n\n  return (\n     <Router> \n      <Fragment >\n        <NavbarComponent  />\n        <Route exact path='/' component={Landing} />\n        <section className=\"dark-overlay\">\n        \n          <Switch>\n            <Route exact path='/register' component={Register} />\n            <Route exact path='/login' component={Login} />\n            <Route exact path='/film/' component={FilmPage} />\n            <Route exact path='/howitworks' component={HowItWorks} />          \n            <PrivateRoute path='/api/film/:id' component={BookingPage} /> \n            <PrivateRoute path='/film/dashboard' component={Dashboard}/>\n            <PrivateRoute path='/create-film' component={CreateFilm} />\n          </Switch>\n        </section>\n      </Fragment>\n    </Router> \n );\n}\n\nexport default App;\n\n{/*<Route path='/api/film/:id' element={<BookingPage authRoute=\"login\" />}/>*/}"]},"metadata":{},"sourceType":"module"}