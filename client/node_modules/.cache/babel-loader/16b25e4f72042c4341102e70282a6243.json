{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.jsx\";\nimport React, { useState, FormEvent } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom'; // import { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\n\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { createSelector } from 'reselect';\nimport { createStructuredSelector } from 'reselect';\nimport { RootState } from '../../reducers/index';\nimport { FilmInitialStateType } from '../../reducers/film'; // import { updateUserTickets } from '../../actions/auth';\n\nimport './checkoutfilm.css'; // interface CheckoutFilmProps {\n//   films: filmInterface \n//   };\n// const selectFilmReducer = (state: RootState): FilmInitialStateType => state.film.film; \n\nconst selectFilmReducer = state => state.film; // export const selectFilmItems = createSelector(\n//   selectFilmReducer,\n//   (film) => film.film.title\n//   // (cart) => cart.cartItems\n// );\n// console.log('select ', selectFilmReducer)\n// console.log('select1 ', selectFilmItems)\n// const CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n\n\nconst CheckoutFilm = _ref => {\n  let {\n    // films,\n    films: {\n      film,\n      loading\n    }\n  } = _ref;\n  // const film = useSelector((state) => state.film.film)\n  // const loading = useSelector((state) => state.film.loading)\n  // const {film}: {film: filmType || null} = films  \n  // const films = createSelector(\n  //   [selectFilmReducer],\n  //   (item) = item.film\n  // );  \n  // console.log('select ', selectFilmItems)\n  console.log('select ', film); // console.log('select ', loading)\n  // const { film, loading } = films\n  // console.log('select ', film)\n  // console.log('state ', film)\n\n  const [filmData, setFilmData] = useState < filmType > {\n    // const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  };\n  let [bookingCost, setBookingCost] = useState < number > 0; // let [bookingCost, setBookingCost] = useState(0);\n  // const [ticketData, setTicketData] = useState<ticketType>({\n\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }\n  }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\" // onChange={e => onChange(e)}\n    ,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckoutButton // filmData={filmData}\n  // ticketData={ticketData}\n  , {\n    price: bookingCost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"checkout-button btn btn-back\",\n    to: \"/film/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }\n  }, \"Go Back\")))));\n}; // const mapStateToProps = state => ({\n//   films: state.film\n//   // films: selectFilmReducer\n// });\n\n\nconst mapStateToProps = createStructuredSelector({\n  films: selectFilmReducer\n});\nexport default connect(mapStateToProps)(CheckoutFilm); // export default CheckoutFilm; \n// updateUserTickets \n// })(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.jsx"],"names":["React","useState","FormEvent","connect","useSelector","Link","withRouter","RouteComponentProps","StripeCheckoutButton","createSelector","createStructuredSelector","RootState","FilmInitialStateType","selectFilmReducer","state","film","CheckoutFilm","films","loading","console","log","filmData","setFilmData","filmType","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","bookingCost","setBookingCost","number","ticketData","setTicketData","numberOfTickets","cost","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,OAAT,EAAkBC,WAAlB,QAAqC,aAArC;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,mBAA3B,QAAsD,kBAAtD,C,CACA;;AACA,OAAOC,oBAAP,MAAiC,8CAAjC;AACA,SAASC,cAAT,QAA+B,UAA/B;AACA,SAASC,wBAAT,QAAyC,UAAzC;AACA,SAASC,SAAT,QAA0B,sBAA1B;AACA,SAASC,oBAAT,QAAqC,qBAArC,C,CACA;;AACA,OAAO,oBAAP,C,CAEA;AACA;AACA;AAGA;;AACA,MAAMC,iBAAiB,GAAIC,KAAD,IAAWA,KAAK,CAACC,IAA3C,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACE,MAAMC,YAAY,GAAG,QAGf;AAAA,MAHgB;AACpB;AACAC,IAAAA,KAAK,EAAE;AAACF,MAAAA,IAAD;AAAOG,MAAAA;AAAP;AAFa,GAGhB;AAEN;AACA;AAED;AAEC;AACA;AACA;AACA;AACA;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBL,IAAvB,EAZM,CAaN;AACA;AACF;AAGE;;AAGA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,GAACsB,QAAT,GAAmB;AAEjD;AACAC,IAAAA,GAAG,EAAET,IAAI,CAACS,GAHuC;AAIjDC,IAAAA,IAAI,EAAEV,IAAI,CAACU,IAJsC;AAKjDC,IAAAA,KAAK,EAAEX,IAAI,CAACW,KALqC;AAMjDC,IAAAA,IAAI,EAAEZ,IAAI,CAACY,IANsC;AAOjDC,IAAAA,MAAM,EAAEb,IAAI,CAACa,MAPoC;AAQjDC,IAAAA,KAAK,EAAEd,IAAI,CAACc,KARqC;AASjDC,IAAAA,WAAW,EAAEf,IAAI,CAACe,WAT+B;AAUjDC,IAAAA,eAAe,EAAEhB,IAAI,CAACgB,eAV2B;AAWjDC,IAAAA,UAAU,EAAEjB,IAAI,CAACiB;AAXgC,GAAnD;AAcA,MAAI,CAACC,WAAD,EAAcC,cAAd,IAAgCjC,QAAQ,GAACkC,MAAT,GAAiB,CAArD,CAnCM,CAoCN;AAEA;;AACE,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BpC,QAAQ,CAAC;AAC7CyB,IAAAA,KAAK,EAAEX,IAAI,CAACW,KADiC;AAE7CI,IAAAA,WAAW,EAAEf,IAAI,CAACe,WAF2B;AAG7CH,IAAAA,IAAI,EAAEZ,IAAI,CAACY,IAHkC;AAI7CC,IAAAA,MAAM,EAAEb,IAAI,CAACa,MAJgC;AAK7CG,IAAAA,eAAe,EAAEhB,IAAI,CAACgB,eALuB;AAM7CC,IAAAA,UAAU,EAAEjB,IAAI,CAACiB,UAN4B;AAO7CM,IAAAA,eAAe,EAAE,CAP4B;AAQ7CC,IAAAA,IAAI,EAAE;AARuC,GAAD,CAA5C;;AAWA,QAAMC,QAAQ,GAAIC,CAAD,IAAO;AACxB,QAAIC,YAAY,GAAGC,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAA3B;AACA,QAAIC,YAAY,GAAGH,QAAQ,CAAC5B,IAAI,CAACe,WAAN,CAAR,GAA6Ba,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAxD;AACA,QAAIE,kBAAkB,GAAGhC,IAAI,CAACiB,UAAL,GAAkBW,QAAQ,CAACF,CAAC,CAACG,MAAF,CAASC,KAAV,CAAnD;AACAX,IAAAA,cAAc,CAACY,YAAD,CAAd;AACAE,IAAAA,aAAa,CAACD,kBAAD,CAAb;AACAE,IAAAA,mBAAmB,CAACF,kBAAD,EAAqBD,YAArB,EAAmCJ,YAAnC,CAAnB;AACD,GAPC;;AASF,QAAMM,aAAa,GAAID,kBAAD,IAAwB;AAC5CzB,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAcW,MAAAA,UAAU,EAAEe;AAA1B,KAAD,CAAX;AACD,GAFD;;AAIA,QAAME,mBAAmB,GAAG,CAACF,kBAAD,EAAqBD,YAArB,EAAmCJ,YAAnC,KAAoD;AAC9EL,IAAAA,aAAa,CAAC,EAAC,GAAGD,UAAJ;AACbJ,MAAAA,UAAU,EAAEe,kBADC;AAEbR,MAAAA,IAAI,EAAEO,YAFO;AAGbR,MAAAA,eAAe,EAAEI;AAHJ,KAAD,CAAb;AAID,GALD;;AAOA,sBAEI,uDACA;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAa3B,IAAI,CAACW,KAAlB,CADF,CADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAaX,IAAI,CAACY,IAAlB,MADF,CAJJ,eAOI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAeZ,IAAI,CAACe,WAApB,MADF,CAPJ,eAUI;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA4Bf,IAAI,CAACgB,eAAjC,MADF,CAVJ,eAaI;AACA,IAAA,SAAS,EAAC,cADV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAAqBhB,IAAI,CAACiB,UAA1B,CAFF,CAbJ,eAkBE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,GAAG,EAAC,GAFN;AAGE,IAAA,WAAW,EAAC,yBAHd;AAIE,IAAA,IAAI,EAAC,SAJP,CAKE;AALF;AAME,IAAA,QAAQ,MANV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CAlBF,eA8BI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACEkB,KAAK,CAACjB,WAAD,CAAL,GAAqB,CAArB,GACEA,WAFJ,CADF,CA9BJ,eAoCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,oBAAD,CACC;AACA;AAFD;AAGC,IAAA,KAAK,EAAEA,WAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,8BAAhB;AAA+C,IAAA,EAAE,EAAC,iBAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADA,CARF,CApCJ,CADA,CAFJ;AAuDD,CAhIC,C,CAkIF;AACA;AACA;AACA;;;AAEA,MAAMkB,eAAe,GAAGzC,wBAAwB,CAAC;AAC/CO,EAAAA,KAAK,EAAEJ;AADwC,CAAD,CAAhD;AAMA,eAAeV,OAAO,CAACgD,eAAD,CAAP,CAAyBnC,YAAzB,CAAf,C,CACA;AACE;AACF","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect, useSelector } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\n// import { ticketType, filmInterface, filmType } from '../../utils/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { createSelector } from 'reselect';\nimport { createStructuredSelector } from 'reselect';\nimport { RootState } from '../../reducers/index';\nimport { FilmInitialStateType } from '../../reducers/film';\n// import { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css'\n\n// interface CheckoutFilmProps {\n//   films: filmInterface \n//   };\n  \n\n// const selectFilmReducer = (state: RootState): FilmInitialStateType => state.film.film; \nconst selectFilmReducer = (state) => state.film; \n\n// export const selectFilmItems = createSelector(\n//   selectFilmReducer,\n//   (film) => film.film.title\n//   // (cart) => cart.cartItems\n// );\n// console.log('select ', selectFilmReducer)\n// console.log('select1 ', selectFilmItems)\n// const CheckoutFilm: React.FC<CheckoutFilmProps> = ({ \n  const CheckoutFilm = ({ \n    // films,\n    films: {film, loading}, \n  }) => {\n\n  // const film = useSelector((state) => state.film.film)\n  // const loading = useSelector((state) => state.film.loading)\n  \n // const {film}: {film: filmType || null} = films  \n  \n  // const films = createSelector(\n  //   [selectFilmReducer],\n  //   (item) = item.film\n  // );  \n  // console.log('select ', selectFilmItems)\n  console.log('select ', film)\n  // console.log('select ', loading)\n  // const { film, loading } = films\n// console.log('select ', film)\n  \n\n  // console.log('state ', film)\n  \n\n  const [filmData, setFilmData] = useState<filmType>({\n    \n    // const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState<number>(0);\n  // let [bookingCost, setBookingCost] = useState(0);\n\n  // const [ticketData, setTicketData] = useState<ticketType>({\n    const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n    const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n \n  return (\n          \n      <>\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div className=\"form-ticket\">   \n            <input\n              type='number'\n              min='0'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              // onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n              <StripeCheckoutButton\n               // filmData={filmData}\n               // ticketData={ticketData}\n               price={bookingCost} \n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n        </>\n  )\n}\n\n// const mapStateToProps = state => ({\n//   films: state.film\n//   // films: selectFilmReducer\n// });\n\nconst mapStateToProps = createStructuredSelector({\n  films: selectFilmReducer\n});\n\n\n\nexport default connect(mapStateToProps)(CheckoutFilm); \n// export default CheckoutFilm; \n  // updateUserTickets \n// })(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}