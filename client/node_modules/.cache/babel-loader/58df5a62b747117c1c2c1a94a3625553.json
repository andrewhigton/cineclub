{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button'; // import { updateUserTickets } from '../../actions/auth';\n\nimport './checkoutfilm.css';\n;\n;\n\nconst CheckoutFilm = _ref => {\n  let {\n    films: {\n      film,\n      loading\n    },\n    films,\n    match,\n    // updateUserTickets,\n    history\n  } = _ref;\n  // let filmInfo = {\n  let _id = film._id;\n  let user = film.user;\n  let title = film.title;\n  let date = film.date;\n  let cinema = film.cinema;\n  let image = film.image;\n  let ticketPrice = film.ticketPrice;\n  let crowdfundTarget = film.crowdfundTarget;\n  let totalsoFar = film.totalsoFar; //}\n\n  const [filmData, setFilmData] = useState({\n    _id: _id,\n    user: user,\n    title: title,\n    date: date,\n    cinema: cinema,\n    image: image,\n    ticketPrice: ticketPrice,\n    crowdfundTarget: crowdfundTarget,\n    totalsoFar: totalsoFar // _id: film._id,\n    // user: film.user,\n    // title: film.title,\n    // date: film.date,\n    // cinema: film.cinema,\n    // image: film.image,\n    // ticketPrice: film.ticketPrice,\n    // crowdfundTarget: film.crowdfundTarget,\n    // totalsoFar: film.totalsoFar\n\n  });\n  let [bookingCost, setBookingCost] = useState(0);\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }\n  }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Price: \\xA3\", film.ticketPrice, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"header-block\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }\n  }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-ticket\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Enter number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckoutButton // filmData={filmData}\n  // ticketData={ticketData}\n  // price={bookingCost} \n  // {...props}\n  // history={history}\n  , {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"checkout-button btn btn-back\",\n    to: \"/film/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }\n  }, \"Go Back\")))));\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, {// updateUserTickets \n})(withRouter(CheckoutFilm));","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx"],"names":["React","useState","connect","Link","withRouter","StripeCheckoutButton","CheckoutFilm","films","film","loading","match","history","_id","user","title","date","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","filmData","setFilmData","bookingCost","setBookingCost","ticketData","setTicketData","numberOfTickets","cost","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType } from '../componentTypes/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\n// import { updateUserTickets } from '../../actions/auth';\nimport './checkoutfilm.css'\n\ninterface ChildComponentProps extends RouteComponentProps<any> {\n  // history: any;\n  match: any;\n  location: any;\n}\n\ninterface CheckoutFilmProps {\n  films: filmInterface;\n  // ticketData: ticketType \n  // loading: boolean;\n  };\n  \ntype JointCheckoutFilmProps = ChildComponentProps & CheckoutFilmProps;\n\n\ninterface filmTypeInterface {\n        _id: string,\n        user: string,\n        title: string,\n        date: string,\n        cinema: string,\n        image: string,\n        ticketPrice: string,\n        crowdfundTarget: number,\n        totalsoFar: number\n      };\n\nconst CheckoutFilm: React.FC<JointCheckoutFilmProps> = ({ \n    films: {film, loading}, \n    films,\n    match, \n    // updateUserTickets,\n    history,\n  }) => {\n\n\n  // let filmInfo = {\n    let _id = film._id\n    let user = film.user\n    let title = film.title\n    let date = film.date\n    let cinema = film.cinema\n    let image = film.image\n    let ticketPrice = film.ticketPrice\n    let crowdfundTarget = film.crowdfundTarget\n    let totalsoFar = film.totalsoFar\n  //}\n\n\n  const [filmData, setFilmData] = useState<filmTypeInterface>({\n    _id: _id,\n    user: user,\n    title: title,\n    date: date,\n    cinema: cinema,\n    image: image,\n    ticketPrice: ticketPrice,\n    crowdfundTarget: crowdfundTarget,\n    totalsoFar: totalsoFar\n    // _id: film._id,\n    // user: film.user,\n    // title: film.title,\n    // date: film.date,\n    // cinema: film.cinema,\n    // image: film.image,\n    // ticketPrice: film.ticketPrice,\n    // crowdfundTarget: film.crowdfundTarget,\n    // totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState(0);\n\n  const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n  const onChange = (e: FormEvent<HTMLFormElement>) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n\n  return (\n      <>\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          <div className='header-block'>\n            <span>Price: £{film.ticketPrice} </span>\n          </div>\n          <div className='header-block'>\n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          </div>\n          <div \n          className='header-block'>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div className=\"form-ticket\">   \n            <input\n              type='number'\n              min='0'\n              placeholder='Enter number of tickets'\n              name='tickets'\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n              <StripeCheckoutButton\n               // filmData={filmData}\n               // ticketData={ticketData}\n               // price={bookingCost} \n               // {...props}\n               // history={history}\n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n        </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\nexport default connect(mapStateToProps, { \n  // updateUserTickets \n})(withRouter(CheckoutFilm));"]},"metadata":{},"sourceType":"module"}