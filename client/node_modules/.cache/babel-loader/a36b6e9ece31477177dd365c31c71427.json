{"ast":null,"code":"var _jsxFileName = \"/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx\";\nimport React, { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport './checkoutfilm.css'; // interface ChildComponentProps extends RouteComponentProps<any> {}\n\n;\nlet ticketDataForDispatch;\n\nconst CheckoutFilm = _ref => {\n  let {\n    films,\n    history\n  } = _ref;\n  const {\n    film,\n    loading\n  } = films;\n  console.log(film.date); //so you have time info here, you just don't transfer it across to tickets.\n  //worth doing? or jsut hard code it for now? \n  //why can you do this in film and yet not in ticket? what's going on? \n\n  const [filmData, setFilmData] = useState({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n  let [bookingCost, setBookingCost] = useState(0);\n  const [ticketData, setTicketData] = useState({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  }); // ticketDataForDispatch = ticketData\n\n  const onChange = e => {\n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value);\n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value);\n    setBookingCost(bookingTotal);\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n  };\n\n  const setTotalSoFar = totalTicketsBooked => {\n    setFilmData({ ...filmData,\n      totalsoFar: totalTicketsBooked\n    });\n  };\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({ ...ticketData,\n      totalsoFar: totalTicketsBooked,\n      cost: bookingTotal,\n      numberOfTickets: ticketsTotal\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"checkout-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, \"Film: \", film.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"Date: \", film.date, \" \")), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }\n  }, \"Price: \\xA3\", film.ticketPrice, \" \"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 13\n    }\n  }, \"Crowdfunding Target: \", film.crowdfundTarget, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, \"Tickets sold: \", film.totalsoFar)), /*#__PURE__*/React.createElement(\"form\", {\n    className: \"form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"number\",\n    min: \"0\",\n    placeholder: \"Number of tickets\",\n    name: \"tickets\",\n    onChange: e => onChange(e),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  }, \"Basket total: \\xA3\", isNaN(bookingCost) ? 0 : bookingCost)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StripeCheckoutButton, {\n    history: history,\n    filmData: filmData,\n    ticketData: ticketData,\n    price: bookingCost,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    className: \"checkout-button btn btn-back\",\n    to: \"/film/dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Go Back\")))));\n};\n\nconst mapStateToProps = state => ({\n  films: state.film\n}); // const mapDispatchToProps = (dispatch) => {\n//   return {\n//      updateUserTickets: () => dispatch(updateUserTickets(ticketDataForDispatch)),\n//   }\n// }\n\n\nexport default connect(mapStateToProps)(CheckoutFilm); //export default connect(mapStateToProps)(CheckoutFilm); \n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)","map":{"version":3,"sources":["/Users/andrewhigton/Documents/code/typescript/cineclub/client/src/components/checkout-film/Checkout-Film.tsx"],"names":["React","useState","connect","Link","StripeCheckoutButton","ticketDataForDispatch","CheckoutFilm","films","history","film","loading","console","log","date","filmData","setFilmData","_id","user","title","cinema","image","ticketPrice","crowdfundTarget","totalsoFar","bookingCost","setBookingCost","ticketData","setTicketData","numberOfTickets","cost","onChange","e","ticketsTotal","parseInt","target","value","bookingTotal","totalTicketsBooked","setTotalSoFar","setTicketTotalSoFar","isNaN","mapStateToProps","state"],"mappings":"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","sourcesContent":["import React, { useState, FormEvent } from 'react';\nimport { connect } from 'react-redux';\nimport { Link, withRouter, RouteComponentProps } from 'react-router-dom';\nimport { ticketType, filmInterface, filmType, ChildComponentProps } from '../../utils/componentTypes';\nimport StripeCheckoutButton from '../../components/stripe-button/stripe-button';\nimport { updateUserTickets } from '../../actions/auth';\nimport { updateFilm } from '../../actions/film';\n\nimport './checkoutfilm.css'\n\n\n// interface ChildComponentProps extends RouteComponentProps<any> {}\n\ninterface CheckoutFilmProps {\n  films: filmInterface;\n  match:() => void;\n  location:() => void;\n  history: () => void;\n  };\n\n\ntype JointCheckoutFilmProps = ChildComponentProps & CheckoutFilmProps\n\n\nlet ticketDataForDispatch;\n\nconst CheckoutFilm: React.FC<JointCheckoutFilmProps> = ({ \n    films,\n    history\n    }) => {\n   \n\n  const { film, loading } = films;\n\n  console.log(film.date)\n  //so you have time info here, you just don't transfer it across to tickets.\n  //worth doing? or jsut hard code it for now? \n  //why can you do this in film and yet not in ticket? what's going on? \n  const [filmData, setFilmData] = useState<filmType>({\n    _id: film._id,\n    user: film.user,\n    title: film.title,\n    date: film.date,\n    cinema: film.cinema,\n    image: film.image,\n    ticketPrice: film.ticketPrice,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar\n  });\n\n  let [bookingCost, setBookingCost] = useState<number>(0);\n\n  const [ticketData, setTicketData] = useState<ticketType>({\n    title: film.title,\n    ticketPrice: film.ticketPrice,\n    date: film.date,\n    cinema: film.cinema,\n    crowdfundTarget: film.crowdfundTarget,\n    totalsoFar: film.totalsoFar,\n    numberOfTickets: 0,\n    cost: 0\n  });\n    \n   \n    // ticketDataForDispatch = ticketData\n\n    const onChange = (e) => {   \n    let ticketsTotal = parseInt(e.target.value);\n    let bookingTotal = parseInt(film.ticketPrice) * parseInt(e.target.value); \n    let totalTicketsBooked = film.totalsoFar + parseInt(e.target.value)\n    setBookingCost(bookingTotal)\n    setTotalSoFar(totalTicketsBooked);\n    setTicketTotalSoFar(totalTicketsBooked, bookingTotal, ticketsTotal);\n\n  }\n\n  const setTotalSoFar = (totalTicketsBooked) => {\n    setFilmData({...filmData, totalsoFar: totalTicketsBooked });\n  }\n\n  const setTicketTotalSoFar = (totalTicketsBooked, bookingTotal, ticketsTotal) => {\n    setTicketData({...ticketData, \n     totalsoFar: totalTicketsBooked, \n     cost: bookingTotal,\n     numberOfTickets: ticketsTotal });\n  } \n\n \n  return (\n      <>\n      <div className='checkout-page'>\n          <div>\n            <span>Film: {film.title}</span>\n          </div>\n          <div>\n            <span>Date: {film.date} </span>\n          </div>\n          \n            <span>Price: £{film.ticketPrice} </span>\n          \n          \n            <span>Crowdfunding Target: {film.crowdfundTarget} </span>\n          \n          <div \n          className=''>\n            <span>Tickets sold: {film.totalsoFar}</span>\n          </div>\n        \n        <form className=\"form\">\n          <div>   \n            <input\n              type='number'\n              min='0'\n              placeholder='Number of tickets'\n              name='tickets'\n              onChange={e => onChange(e)}\n              required\n            />\n          </div>  \n        </form>\n          <div>\n            <span>Basket total: £{\n              isNaN(bookingCost) ? 0 \n              : bookingCost}\n            </span>\n          </div>\n          <div>\n            <span> \n              <StripeCheckoutButton\n                history={history}\n                filmData={filmData}\n                ticketData={ticketData}\n                price={bookingCost} \n               />\n            </span>\n            <div>\n            <Link className='checkout-button btn btn-back' to='/film/dashboard'>Go Back\n            </Link>\n            </div>\n          </div>\n          </div>\n        </>\n  )\n}\n\nconst mapStateToProps = state => ({\n  films: state.film\n});\n\n// const mapDispatchToProps = (dispatch) => {\n//   return {\n//      updateUserTickets: () => dispatch(updateUserTickets(ticketDataForDispatch)),\n//   }\n// }\n\nexport default connect(mapStateToProps)(CheckoutFilm); \n//export default connect(mapStateToProps)(CheckoutFilm); \n\n\n// const film = useSelector((state) => state.film.film)\n// const loading = useSelector((state) => state.film.loading)\n"]},"metadata":{},"sourceType":"module"}